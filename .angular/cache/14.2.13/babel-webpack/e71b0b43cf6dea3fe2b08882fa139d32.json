{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/prakhyamylavaram/Desktop/SJSU/CMPE-202/Project_Theater/Movie-Theater-booking/ui-components/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"/Users/prakhyamylavaram/Desktop/SJSU/CMPE-202/Project_Theater/Movie-Theater-booking/ui-components/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/prakhyamylavaram/Desktop/SJSU/CMPE-202/Project_Theater/Movie-Theater-booking/ui-components/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { TheaterService } from 'app/services/theater.service';\nimport { MessageService } from 'primeng/api';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"app/services/theater.service\";\nimport * as i3 from \"primeng/chart\";\nimport * as i4 from \"primeng/selectbutton\";\nimport * as i5 from \"@angular/forms\";\nexport var analyticsComponent = /*#__PURE__*/(function () {\n  var analyticsComponent = /*#__PURE__*/function () {\n    function analyticsComponent(http, theaterSvc) {\n      _classCallCheck(this, analyticsComponent);\n\n      this.http = http;\n      this.theaterSvc = theaterSvc;\n      this.dayslist = [{\n        name: '30 Days',\n        value: 30\n      }, {\n        name: '60 Days',\n        value: 60\n      }, {\n        name: '90 Days',\n        value: 90\n      }];\n      this.days = 30;\n      this.dataLoc = {\n        locationData: {\n          labels: [],\n          datasets: [{\n            label: 'Location ID vs Total Seats',\n            data: []\n          }]\n        },\n        movieData: {\n          labels: [],\n          datasets: [{\n            label: 'Movie ID vs Total Seats',\n            data: []\n          }]\n        }\n      };\n      this.dataMov = {\n        locationData: {\n          labels: [],\n          datasets: [{\n            label: 'Location ID vs Total Seats',\n            data: []\n          }]\n        },\n        movieData: {\n          labels: [],\n          datasets: [{\n            label: 'Movie ID vs Total Seats',\n            data: []\n          }]\n        }\n      };\n    }\n\n    _createClass(analyticsComponent, [{\n      key: \"ngOnInit\",\n      value: function ngOnInit() {\n        this.getAnalytics(this.days);\n      }\n    }, {\n      key: \"getLocationName\",\n      value: function getLocationName(locationId) {\n        var location = this.theaterSvc.location_list.find(function (loc) {\n          return loc.location_id === locationId;\n        });\n        return location.city;\n      }\n    }, {\n      key: \"getMovieName\",\n      value: function getMovieName(movieId) {\n        var movie = this.movies.find(function (mov) {\n          return mov.movie_id === movieId;\n        });\n        return movie.movie_name;\n      }\n    }, {\n      key: \"getAnalytics\",\n      value: function getAnalytics(days) {\n        var _this = this;\n\n        var params = new HttpParams();\n        params = params.append('days', days);\n        this.http.get('/api/ticket/analytics/movie', {\n          params: params\n        }).subscribe(function (res) {\n          console.log(res); // this.location_analytic = this.getLocationSeatData();\n          // this.movie_analytics = this.getMovieSeatData();\n          // this.analytics = {\n          //     \"labels\": res.map((r)=>r.location_id)\n          // } \n\n          _this.dataMov = {\n            locationData: {\n              labels: [],\n              datasets: [{\n                label: 'Location ID vs Total Seats',\n                data: []\n              }]\n            },\n            movieData: {\n              labels: [],\n              datasets: [{\n                label: 'Movie ID vs Total Seats',\n                data: []\n              }]\n            }\n          };\n\n          var _iterator = _createForOfIteratorHelper(res),\n              _step;\n\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var item = _step.value;\n\n              var movieName = _this.getMovieName(item.movie_id);\n\n              _this.dataMov.movieData.labels.push(movieName);\n\n              _this.dataMov.movieData.datasets[0].data.push(parseInt(item.total_seats));\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n\n          console.log(_this.dataMov);\n        });\n        this.http.get('/api/ticket/analytics/location', {\n          params: params\n        }).subscribe(function (res) {\n          console.log(res); // this.location_analytic = this.getLocationSeatData();\n          // this.movie_analytics = this.getMovieSeatData();\n          // this.analytics = {\n          //     \"labels\": res.map((r)=>r.location_id)\n          // } \n\n          _this.dataLoc = {\n            locationData: {\n              labels: [],\n              datasets: [{\n                label: 'Location ID vs Total Seats',\n                data: []\n              }]\n            },\n            movieData: {\n              labels: [],\n              datasets: [{\n                label: 'Movie ID vs Total Seats',\n                data: []\n              }]\n            }\n          };\n\n          var _iterator2 = _createForOfIteratorHelper(res),\n              _step2;\n\n          try {\n            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n              var item = _step2.value;\n\n              var locationName = _this.getLocationName(item.location_id);\n\n              _this.dataLoc.locationData.labels.push(locationName);\n\n              _this.dataLoc.locationData.datasets[0].data.push(parseInt(item.total_seats));\n            }\n          } catch (err) {\n            _iterator2.e(err);\n          } finally {\n            _iterator2.f();\n          }\n\n          console.log(_this.dataLoc);\n        });\n      }\n    }]);\n\n    return analyticsComponent;\n  }();\n\n  analyticsComponent.ɵfac = function analyticsComponent_Factory(t) {\n    return new (t || analyticsComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.TheaterService));\n  };\n\n  analyticsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: analyticsComponent,\n    selectors: [[\"app-analytics\"]],\n    inputs: {\n      movies: \"movies\"\n    },\n    features: [i0.ɵɵProvidersFeature([MessageService])],\n    decls: 3,\n    vars: 4,\n    consts: [[\"optionLabel\", \"name\", \"optionValue\", \"value\", 3, \"options\", \"ngModel\", \"ngModelChange\", \"onChange\"], [\"type\", \"line\", 3, \"data\"]],\n    template: function analyticsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p-selectButton\", 0);\n        i0.ɵɵlistener(\"ngModelChange\", function analyticsComponent_Template_p_selectButton_ngModelChange_0_listener($event) {\n          return ctx.days = $event;\n        })(\"onChange\", function analyticsComponent_Template_p_selectButton_onChange_0_listener() {\n          return ctx.getAnalytics(ctx.days);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(1, \"p-chart\", 1)(2, \"p-chart\", 1);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"options\", ctx.dayslist)(\"ngModel\", ctx.days);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"data\", ctx.dataLoc == null ? null : ctx.dataLoc.locationData);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"data\", ctx.dataMov == null ? null : ctx.dataMov.movieData);\n      }\n    },\n    dependencies: [i3.UIChart, i4.SelectButton, i5.NgControlStatus, i5.NgModel]\n  });\n  return analyticsComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}