{"ast":null,"code":"import _classCallCheck from \"/Users/prakhyamylavaram/Desktop/SJSU/CMPE-202/Project_Theater/Movie-Theater-booking/ui-components/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/prakhyamylavaram/Desktop/SJSU/CMPE-202/Project_Theater/Movie-Theater-booking/ui-components/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { FormArray, FormBuilder, FormGroup } from '@angular/forms';\nimport { AuthenticationService } from '../../services/authentication.service';\nimport { MessageService } from 'primeng/api';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"../../services/authentication.service\";\nimport * as i4 from \"primeng/api\";\nimport * as i5 from \"primeng/multiselect\";\nimport * as i6 from \"primeng/dropdown\";\nimport * as i7 from \"primeng/toast\";\nimport * as i8 from \"@angular/common\";\nimport * as i9 from \"primeng/tabview\";\nimport * as i10 from \"primeng/calendar\";\n\nfunction theaterOperationComponent_div_1_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"p-calendar\", 22);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var timeControl_r3 = ctx.$implicit;\n    var i_r4 = ctx.index;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formControl\", timeControl_r3)(\"id\", \"time_\" + i_r4)(\"inputStyleClass\", \"form-control\")(\"placeholder\", \"Enter Time \" + (i_r4 + 1));\n  }\n}\n\nfunction theaterOperationComponent_div_1_div_45_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"p-calendar\", 22);\n    i0.ɵɵelementStart(2, \"button\", 14);\n    i0.ɵɵlistener(\"click\", function theaterOperationComponent_div_1_div_45_Template_button_click_2_listener() {\n      var restoredCtx = i0.ɵɵrestoreView(_r8);\n      var i_r6 = restoredCtx.index;\n      var ctx_r7 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r7.removeTimeInput(i_r6));\n    });\n    i0.ɵɵtext(3, \"-\");\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    var timeControl_r5 = ctx.$implicit;\n    var i_r6 = ctx.index;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formControl\", timeControl_r5)(\"id\", \"time_\" + i_r6)(\"inputStyleClass\", \"form-control\")(\"placeholder\", \"Enter Time \" + (i_r6 + 1));\n  }\n}\n\nfunction theaterOperationComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r10 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\")(1, \"p-tabView\", 1);\n    i0.ɵɵlistener(\"onChange\", function theaterOperationComponent_div_1_Template_p_tabView_onChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      var ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.handleChange($event));\n    });\n    i0.ɵɵelementStart(2, \"p-tabPanel\", 2)(3, \"form\", 3);\n    i0.ɵɵlistener(\"ngSubmit\", function theaterOperationComponent_div_1_Template_form_ngSubmit_3_listener() {\n      i0.ɵɵrestoreView(_r10);\n      var ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.newScreen());\n    });\n    i0.ɵɵelementStart(4, \"div\", 4)(5, \"label\", 5);\n    i0.ɵɵtext(6, \"Screen Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(7, \"input\", 6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"div\", 4)(9, \"label\", 7);\n    i0.ɵɵtext(10, \"Rows\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(11, \"input\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"div\", 4)(13, \"label\", 9);\n    i0.ɵɵtext(14, \"columns\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(15, \"input\", 10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"div\", 11)(17, \"label\", 12);\n    i0.ɵɵtext(18, \"Show times\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(19, theaterOperationComponent_div_1_div_19_Template, 2, 4, \"div\", 13);\n    i0.ɵɵelementStart(20, \"button\", 14);\n    i0.ɵɵlistener(\"click\", function theaterOperationComponent_div_1_Template_button_click_20_listener() {\n      i0.ɵɵrestoreView(_r10);\n      var ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.addTimeInput());\n    });\n    i0.ɵɵtext(21, \"+\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(22, \"button\", 15);\n    i0.ɵɵtext(23, \"Create\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(24, \"p-tabPanel\", 16)(25, \"form\", 3);\n    i0.ɵɵlistener(\"ngSubmit\", function theaterOperationComponent_div_1_Template_form_ngSubmit_25_listener() {\n      i0.ɵɵrestoreView(_r10);\n      var ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.editScreen());\n    });\n    i0.ɵɵelementStart(26, \"div\", 4)(27, \"label\", 17);\n    i0.ɵɵtext(28, \"Screens\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(29, \"p-dropdown\", 18);\n    i0.ɵɵlistener(\"ngModelChange\", function theaterOperationComponent_div_1_Template_p_dropdown_ngModelChange_29_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      var ctx_r14 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r14.ss = $event);\n    })(\"onChange\", function theaterOperationComponent_div_1_Template_p_dropdown_onChange_29_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      var ctx_r15 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r15.populateScreen($event));\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(30, \"div\", 4)(31, \"label\", 5);\n    i0.ɵɵtext(32, \"Screen Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(33, \"input\", 6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(34, \"div\", 4)(35, \"label\", 7);\n    i0.ɵɵtext(36, \"Rows\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(37, \"input\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(38, \"div\", 4)(39, \"label\", 9);\n    i0.ɵɵtext(40, \"columns\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(41, \"input\", 10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(42, \"div\", 11)(43, \"label\", 12);\n    i0.ɵɵtext(44, \"Show times\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(45, theaterOperationComponent_div_1_div_45_Template, 4, 4, \"div\", 13);\n    i0.ɵɵelementStart(46, \"button\", 14);\n    i0.ɵɵlistener(\"click\", function theaterOperationComponent_div_1_Template_button_click_46_listener() {\n      i0.ɵɵrestoreView(_r10);\n      var ctx_r16 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r16.addEditTimeInput());\n    });\n    i0.ɵɵtext(47, \"+\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(48, \"button\", 15);\n    i0.ɵɵtext(49, \"Edit\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(50, \"p-tabPanel\", 19)(51, \"form\", 3);\n    i0.ɵɵlistener(\"ngSubmit\", function theaterOperationComponent_div_1_Template_form_ngSubmit_51_listener() {\n      i0.ɵɵrestoreView(_r10);\n      var ctx_r17 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r17.removeShows());\n    });\n    i0.ɵɵelementStart(52, \"div\", 4)(53, \"label\", 17);\n    i0.ɵɵtext(54, \"Screens\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(55, \"p-dropdown\", 18);\n    i0.ɵɵlistener(\"ngModelChange\", function theaterOperationComponent_div_1_Template_p_dropdown_ngModelChange_55_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      var ctx_r18 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r18.sss = $event);\n    })(\"onChange\", function theaterOperationComponent_div_1_Template_p_dropdown_onChange_55_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      var ctx_r19 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r19.getBlockedShowTimes($event));\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(56, \"div\", 4)(57, \"label\", 20);\n    i0.ɵɵtext(58, \"Available Show Times\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(59, \"p-multiSelect\", 21);\n    i0.ɵɵlistener(\"ngModelChange\", function theaterOperationComponent_div_1_Template_p_multiSelect_ngModelChange_59_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      var ctx_r20 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r20.show_times = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(60, \"button\", 15);\n    i0.ɵɵtext(61, \"Delete\");\n    i0.ɵɵelementEnd()()()()();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.newcreenForm);\n    i0.ɵɵadvance(16);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.newcreenForm.controls.showTimes.controls);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.editscreenform);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.ss)(\"filter\", true)(\"options\", ctx_r0.screens)(\"showClear\", true);\n    i0.ɵɵadvance(16);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.editscreenform.controls.showTimes.controls);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.removeshowtime);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.sss)(\"filter\", true)(\"options\", ctx_r0.screens)(\"showClear\", true);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"options\", ctx_r0.blocked_show_times == null ? null : ctx_r0.blocked_show_times.map(ctx_r0.formatTimeDisplay))(\"ngModel\", ctx_r0.show_times);\n  }\n}\n\nexport var theaterOperationComponent = /*#__PURE__*/(function () {\n  var theaterOperationComponent = /*#__PURE__*/function () {\n    function theaterOperationComponent(fb, http, auth, messageService) {\n      _classCallCheck(this, theaterOperationComponent);\n\n      this.fb = fb;\n      this.http = http;\n      this.auth = auth;\n      this.messageService = messageService;\n      this.checked = false;\n      this.blocked_show_times = [];\n      this.newcreenForm = this.fb.group({\n        screen_name: [''],\n        rows: [''],\n        columns: [''],\n        showTimes: this.fb.array([])\n      });\n      this.editscreenform = this.fb.group({\n        screen_name: [''],\n        rows: [''],\n        columns: [''],\n        deleteShows: [[]],\n        showTimes: this.fb.array([])\n      });\n      this.removeshowtime = this.fb.group({\n        screen_name: [''],\n        blocked_show_times_form: [[]]\n      });\n      this.addTimeInput();\n    }\n\n    _createClass(theaterOperationComponent, [{\n      key: \"ngOnInit\",\n      value: function ngOnInit() {}\n    }, {\n      key: \"addTimeInput\",\n      value: function addTimeInput() {\n        var timeControl = this.fb.control('');\n        this.newcreenForm.get('showTimes').push(timeControl);\n      }\n    }, {\n      key: \"addEditTimeInput\",\n      value: function addEditTimeInput() {\n        var timeControl = this.fb.control('');\n        this.editscreenform.get('showTimes').push(timeControl);\n      }\n    }, {\n      key: \"newScreen\",\n      value: function newScreen() {\n        var _this = this;\n\n        var _a;\n\n        console.log(this.newcreenForm.value);\n        var headers = new HttpHeaders({\n          'Content-Type': 'application/json' // Set default header\n\n        });\n\n        if ((_a = this.auth.user) === null || _a === void 0 ? void 0 : _a.token) {\n          headers = headers.set('Authorization', this.auth.user.token);\n        }\n\n        var body = {\n          \"show_times\": this.newcreenForm.value.showTimes,\n          \"columns\": this.newcreenForm.value.columns,\n          \"rows\": this.newcreenForm.value.rows,\n          \"screen_name\": this.newcreenForm.value.screen_name,\n          \"theater_id\": this.id\n        };\n        this.http.post('/api/theaters/theater_screen', body, {\n          headers: headers\n        }).subscribe(function (res) {\n          _this.messageService.add({\n            severity: 'success',\n            summary: 'Success',\n            detail: 'Screen Created'\n          });\n\n          _this.newcreenForm.reset();\n        });\n      }\n    }, {\n      key: \"handleChange\",\n      value: function handleChange($event) {\n        var _this2 = this;\n\n        console.log($event);\n        console.log(this.editscreenform.controls.showTimes);\n        var showTimesArray = this.editscreenform.get('showTimes');\n        showTimesArray.clear();\n        this.editscreenform.reset();\n\n        if ($event.index >= 1) {\n          var params = new HttpParams();\n          params = params.append('theater_id', this.id);\n          this.http.get('/api/theaters/theater_screen', {\n            params: params\n          }).subscribe(function (res) {\n            _this2.screens = res;\n          });\n        }\n      }\n    }, {\n      key: \"populateScreen\",\n      value: function populateScreen($event) {\n        var _this3 = this;\n\n        var showTimesArray = this.editscreenform.get('showTimes');\n        showTimesArray.clear();\n        this.editscreenform.reset();\n        console.log($event);\n        this.selected_screen_id = $event.value.screen_id;\n        this.editscreenform.patchValue({\n          screen_name: $event.value.screen_name,\n          rows: $event.value.rows,\n          columns: $event.value.columns\n        });\n\n        if ($event.value.show_times) {\n          var _showTimesArray = this.editscreenform.get('showTimes');\n\n          $event.value.show_times.forEach(function (time) {\n            _showTimesArray.push(_this3.fb.control(new Date(time)));\n          });\n        }\n      }\n    }, {\n      key: \"removeTimeInput\",\n      value: function removeTimeInput(index) {\n        this.editscreenform.get('showTimes').removeAt(index);\n      }\n    }, {\n      key: \"editScreen\",\n      value: function editScreen() {\n        var _this4 = this;\n\n        var _a;\n\n        var headers = new HttpHeaders({\n          'Content-Type': 'application/json' // Set default header\n\n        });\n\n        if ((_a = this.auth.user) === null || _a === void 0 ? void 0 : _a.token) {\n          headers = headers.set('Authorization', this.auth.user.token);\n        }\n\n        var body = {\n          \"show_times\": this.editscreenform.value.showTimes,\n          \"columns\": this.editscreenform.value.columns,\n          \"rows\": this.editscreenform.value.rows,\n          \"screen_name\": this.editscreenform.value.screen_name,\n          \"screen_id\": this.selected_screen_id\n        };\n        this.http.put('/api/theaters/theater_screen', body, {\n          headers: headers\n        }).subscribe(function (res) {\n          _this4.editscreenform.controls.showTimes.reset();\n\n          var showTimesArray = _this4.editscreenform.get('showTimes');\n\n          showTimesArray.clear();\n\n          _this4.editscreenform.reset();\n\n          _this4.messageService.add({\n            severity: 'success',\n            summary: 'Success',\n            detail: 'Screen Edited'\n          });\n        });\n      }\n    }, {\n      key: \"getBlockedShowTimes\",\n      value: function getBlockedShowTimes($event) {\n        var _this5 = this;\n\n        this.sss = $event.value;\n        var params = new HttpParams();\n        params = params.append('theater_id', this.id);\n        params = params.append('screen_id', $event.value.screen_id);\n        this.http.get('/api/theaters/screen', {\n          params: params\n        }).subscribe(function (res) {\n          console.log(res);\n          _this5.blocked_show_times = [];\n          res.forEach(function (r) {\n            _this5.blocked_show_times.push(r === null || r === void 0 ? void 0 : r.show_time);\n          });\n        });\n      }\n    }, {\n      key: \"formatTimeDisplay\",\n      value: function formatTimeDisplay(time) {\n        var date = new Date(time);\n        var formattedTime = date.toLocaleTimeString(); // Adjust formatting options as needed\n\n        return formattedTime;\n      }\n    }, {\n      key: \"removeShows\",\n      value: function removeShows() {\n        var _this6 = this;\n\n        var _a;\n\n        console.log(this.removeshowtime.value);\n        var st = [];\n        var headers = new HttpHeaders({\n          'Content-Type': 'application/json' // Set default header\n\n        });\n\n        if ((_a = this.auth.user) === null || _a === void 0 ? void 0 : _a.token) {\n          headers = headers.set('Authorization', this.auth.user.token);\n        }\n\n        this.blocked_show_times.forEach(function (res) {\n          var c = _this6.formatTimeDisplay(res);\n\n          if (_this6.removeshowtime.value.blocked_show_times_form.includes(c)) {\n            st.push(res);\n          }\n        });\n        var body = {\n          \"screen_id\": this.removeshowtime.value.screen_name.screen_id,\n          \"show_times\": st\n        };\n        this.http.delete('/api/theaters/screen', {\n          headers: headers,\n          body: body\n        }).subscribe(function (res) {\n          _this6.removeshowtime.reset();\n\n          _this6.messageService.add({\n            severity: 'success',\n            summary: 'Success',\n            detail: 'Screen Show times Freed'\n          });\n        });\n      }\n    }]);\n\n    return theaterOperationComponent;\n  }();\n\n  theaterOperationComponent.ɵfac = function theaterOperationComponent_Factory(t) {\n    return new (t || theaterOperationComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.AuthenticationService), i0.ɵɵdirectiveInject(i4.MessageService));\n  };\n\n  theaterOperationComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: theaterOperationComponent,\n    selectors: [[\"app-theaterOperation\"]],\n    inputs: {\n      id: \"id\",\n      screen: \"screen\"\n    },\n    features: [i0.ɵɵProvidersFeature([MessageService])],\n    decls: 2,\n    vars: 1,\n    consts: [[4, \"ngIf\"], [3, \"onChange\"], [\"header\", \"Add New Screen\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"screen_name\"], [\"formControlName\", \"screen_name\", \"type\", \"text\", \"id\", \"screen_name\", \"placeholder\", \"Enter Screen Name\", 1, \"form-control\"], [\"for\", \"rows\"], [\"formControlName\", \"rows\", \"type\", \"text\", \"id\", \"rows\", \"placeholder\", \"Enter Number of Rows\", 1, \"form-control\"], [\"for\", \"columns\"], [\"formControlName\", \"columns\", \"type\", \"text\", \"id\", \"columns\", \"placeholder\", \"Enter Number of Columns\", 1, \"form-control\"], [1, \"form-group\", 2, \"display\", \"flex\"], [\"for\", \"show_times\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", 3, \"click\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [\"header\", \"Edit Screen\"], [\"for\", \"screens\"], [\"formControlName\", \"screen_name\", \"id\", \"screens\", \"placeholder\", \"Select a screen\", \"optionLabel\", \"screen_name\", 3, \"ngModel\", \"filter\", \"options\", \"showClear\", \"ngModelChange\", \"onChange\"], [\"header\", \"Remove Show Times\"], [\"for\", \"blocked_show_times_form\"], [\"formControlName\", \"blocked_show_times_form\", \"defaultLabel\", \"Select Show times\", \"display\", \"chip\", 3, \"options\", \"ngModel\", \"ngModelChange\"], [\"timeOnly\", \"true\", 3, \"formControl\", \"id\", \"inputStyleClass\", \"placeholder\"]],\n    template: function theaterOperationComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"p-toast\");\n        i0.ɵɵtemplate(1, theaterOperationComponent_div_1_Template, 62, 15, \"div\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.screen);\n      }\n    },\n    dependencies: [i5.MultiSelect, i6.Dropdown, i7.Toast, i8.NgForOf, i8.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i9.TabView, i9.TabPanel, i1.FormControlDirective, i1.FormGroupDirective, i1.FormControlName, i10.Calendar],\n    styles: [\".error[_ngcontent-%COMP%]{color:red;border:1px solid #f00;border-radius:30px}.icon[_ngcontent-%COMP%]{margin-right:10px;cursor:pointer}.caption-wrapper[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:space-between}.custom-button[_ngcontent-%COMP%]{margin-left:10px}.form-row[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap;gap:10px}.form-item[_ngcontent-%COMP%]{flex:1;display:flex;flex-direction:column}label[_ngcontent-%COMP%]{margin-right:15px;margin-bottom:5px}.form-control[_ngcontent-%COMP%]{width:50%!important;display:inline!important}\"]\n  });\n  return theaterOperationComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}