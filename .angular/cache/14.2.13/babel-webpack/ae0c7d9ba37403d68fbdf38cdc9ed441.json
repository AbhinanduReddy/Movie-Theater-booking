{"ast":null,"code":"import _classCallCheck from \"/Users/prakhyamylavaram/Desktop/SJSU/CMPE-202/Project_Theater/Movie-Theater-booking/ui-components/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/prakhyamylavaram/Desktop/SJSU/CMPE-202/Project_Theater/Movie-Theater-booking/ui-components/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { animation, style, animate, trigger, transition, useAnimation } from '@angular/animations';\nimport * as i2 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { forwardRef, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, Input, Output, ContentChildren, ViewChild, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport * as i1 from 'primeng/api';\nimport { PrimeTemplate, SharedModule } from 'primeng/api';\nimport { DomHandler, ConnectedOverlayScrollHandler } from 'primeng/dom';\nimport { ObjectUtils, ZIndexUtils } from 'primeng/utils';\nvar _c0 = [\"overlay\"];\nvar _c1 = [\"content\"];\n\nfunction Overlay_div_0_div_2_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nvar _c2 = function _c2(a0, a1, a2) {\n  return {\n    showTransitionParams: a0,\n    hideTransitionParams: a1,\n    transform: a2\n  };\n};\n\nvar _c3 = function _c3(a1) {\n  return {\n    value: \"visible\",\n    params: a1\n  };\n};\n\nvar _c4 = function _c4(a0) {\n  return {\n    mode: a0\n  };\n};\n\nvar _c5 = function _c5(a0) {\n  return {\n    $implicit: a0\n  };\n};\n\nfunction Overlay_div_0_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 1, 3);\n    i0.ɵɵlistener(\"click\", function Overlay_div_0_div_2_Template_div_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      var ctx_r5 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r5.onOverlayContentClick($event));\n    })(\"@overlayContentAnimation.start\", function Overlay_div_0_div_2_Template_div_animation_overlayContentAnimation_start_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      var ctx_r7 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r7.onOverlayContentAnimationStart($event));\n    })(\"@overlayContentAnimation.done\", function Overlay_div_0_div_2_Template_div_animation_overlayContentAnimation_done_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      var ctx_r8 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r8.onOverlayContentAnimationDone($event));\n    });\n    i0.ɵɵprojection(2);\n    i0.ɵɵtemplate(3, Overlay_div_0_div_2_ng_container_3_Template, 1, 0, \"ng-container\", 4);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassMap(ctx_r2.contentStyleClass);\n    i0.ɵɵproperty(\"ngStyle\", ctx_r2.contentStyle)(\"ngClass\", \"p-overlay-content\")(\"@overlayContentAnimation\", i0.ɵɵpureFunction1(11, _c3, i0.ɵɵpureFunction3(7, _c2, ctx_r2.showTransitionOptions, ctx_r2.hideTransitionOptions, ctx_r2.transformOptions[ctx_r2.modal ? ctx_r2.overlayResponsiveDirection : \"default\"])));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r2.contentTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(15, _c5, i0.ɵɵpureFunction1(13, _c4, ctx_r2.overlayMode)));\n  }\n}\n\nvar _c6 = function _c6(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14) {\n  return {\n    \"p-overlay p-component\": true,\n    \"p-overlay-modal p-component-overlay p-component-overlay-enter\": a1,\n    \"p-overlay-center\": a2,\n    \"p-overlay-top\": a3,\n    \"p-overlay-top-start\": a4,\n    \"p-overlay-top-end\": a5,\n    \"p-overlay-bottom\": a6,\n    \"p-overlay-bottom-start\": a7,\n    \"p-overlay-bottom-end\": a8,\n    \"p-overlay-left\": a9,\n    \"p-overlay-left-start\": a10,\n    \"p-overlay-left-end\": a11,\n    \"p-overlay-right\": a12,\n    \"p-overlay-right-start\": a13,\n    \"p-overlay-right-end\": a14\n  };\n};\n\nfunction Overlay_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r10 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 1, 2);\n    i0.ɵɵlistener(\"click\", function Overlay_div_0_Template_div_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      var ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.onOverlayClick($event));\n    });\n    i0.ɵɵtemplate(2, Overlay_div_0_div_2_Template, 4, 17, \"div\", 0);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r0.styleClass);\n    i0.ɵɵproperty(\"ngStyle\", ctx_r0.style)(\"ngClass\", i0.ɵɵpureFunctionV(5, _c6, [ctx_r0.modal, ctx_r0.modal && ctx_r0.overlayResponsiveDirection === \"center\", ctx_r0.modal && ctx_r0.overlayResponsiveDirection === \"top\", ctx_r0.modal && ctx_r0.overlayResponsiveDirection === \"top-start\", ctx_r0.modal && ctx_r0.overlayResponsiveDirection === \"top-end\", ctx_r0.modal && ctx_r0.overlayResponsiveDirection === \"bottom\", ctx_r0.modal && ctx_r0.overlayResponsiveDirection === \"bottom-start\", ctx_r0.modal && ctx_r0.overlayResponsiveDirection === \"bottom-end\", ctx_r0.modal && ctx_r0.overlayResponsiveDirection === \"left\", ctx_r0.modal && ctx_r0.overlayResponsiveDirection === \"left-start\", ctx_r0.modal && ctx_r0.overlayResponsiveDirection === \"left-end\", ctx_r0.modal && ctx_r0.overlayResponsiveDirection === \"right\", ctx_r0.modal && ctx_r0.overlayResponsiveDirection === \"right-start\", ctx_r0.modal && ctx_r0.overlayResponsiveDirection === \"right-end\"]));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.visible);\n  }\n}\n\nvar _c7 = [\"*\"];\nvar OVERLAY_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(function () {\n    return Overlay;\n  }),\n  multi: true\n};\nvar showOverlayContentAnimation = animation([style({\n  transform: '{{transform}}',\n  opacity: 0\n}), animate('{{showTransitionParams}}')]);\nvar hideOverlayContentAnimation = animation([animate('{{hideTransitionParams}}', style({\n  transform: '{{transform}}',\n  opacity: 0\n}))]);\nvar Overlay = /*#__PURE__*/(function () {\n  var Overlay = /*#__PURE__*/function () {\n    function Overlay(document, el, renderer, config, overlayService, cd) {\n      _classCallCheck(this, Overlay);\n\n      this.document = document;\n      this.el = el;\n      this.renderer = renderer;\n      this.config = config;\n      this.overlayService = overlayService;\n      this.cd = cd;\n      this.visibleChange = new EventEmitter();\n      this.onBeforeShow = new EventEmitter();\n      this.onShow = new EventEmitter();\n      this.onBeforeHide = new EventEmitter();\n      this.onHide = new EventEmitter();\n      this.onAnimationStart = new EventEmitter();\n      this.onAnimationDone = new EventEmitter();\n      this._visible = false;\n      this.modalVisible = false;\n      this.isOverlayClicked = false;\n      this.isOverlayContentClicked = false;\n      this.transformOptions = {\n        default: 'scaleY(0.8)',\n        center: 'scale(0.7)',\n        top: 'translate3d(0px, -100%, 0px)',\n        'top-start': 'translate3d(0px, -100%, 0px)',\n        'top-end': 'translate3d(0px, -100%, 0px)',\n        bottom: 'translate3d(0px, 100%, 0px)',\n        'bottom-start': 'translate3d(0px, 100%, 0px)',\n        'bottom-end': 'translate3d(0px, 100%, 0px)',\n        left: 'translate3d(-100%, 0px, 0px)',\n        'left-start': 'translate3d(-100%, 0px, 0px)',\n        'left-end': 'translate3d(-100%, 0px, 0px)',\n        right: 'translate3d(100%, 0px, 0px)',\n        'right-start': 'translate3d(100%, 0px, 0px)',\n        'right-end': 'translate3d(100%, 0px, 0px)'\n      };\n      this.window = this.document.defaultView;\n    }\n\n    _createClass(Overlay, [{\n      key: \"visible\",\n      get: function get() {\n        return this._visible;\n      },\n      set: function set(value) {\n        this._visible = value;\n\n        if (this._visible && !this.modalVisible) {\n          this.modalVisible = true;\n        }\n      }\n    }, {\n      key: \"mode\",\n      get: function get() {\n        var _a;\n\n        return this._mode || ((_a = this.overlayOptions) === null || _a === void 0 ? void 0 : _a.mode);\n      },\n      set: function set(value) {\n        this._mode = value;\n      }\n    }, {\n      key: \"style\",\n      get: function get() {\n        var _a, _b;\n\n        return ObjectUtils.merge(this._style, this.modal ? (_a = this.overlayResponsiveOptions) === null || _a === void 0 ? void 0 : _a.style : (_b = this.overlayOptions) === null || _b === void 0 ? void 0 : _b.style);\n      },\n      set: function set(value) {\n        this._style = value;\n      }\n    }, {\n      key: \"styleClass\",\n      get: function get() {\n        var _a, _b;\n\n        return ObjectUtils.merge(this._styleClass, this.modal ? (_a = this.overlayResponsiveOptions) === null || _a === void 0 ? void 0 : _a.styleClass : (_b = this.overlayOptions) === null || _b === void 0 ? void 0 : _b.styleClass);\n      },\n      set: function set(value) {\n        this._styleClass = value;\n      }\n    }, {\n      key: \"contentStyle\",\n      get: function get() {\n        var _a, _b;\n\n        return ObjectUtils.merge(this._contentStyle, this.modal ? (_a = this.overlayResponsiveOptions) === null || _a === void 0 ? void 0 : _a.contentStyle : (_b = this.overlayOptions) === null || _b === void 0 ? void 0 : _b.contentStyle);\n      },\n      set: function set(value) {\n        this._contentStyle = value;\n      }\n    }, {\n      key: \"contentStyleClass\",\n      get: function get() {\n        var _a, _b;\n\n        return ObjectUtils.merge(this._contentStyleClass, this.modal ? (_a = this.overlayResponsiveOptions) === null || _a === void 0 ? void 0 : _a.contentStyleClass : (_b = this.overlayOptions) === null || _b === void 0 ? void 0 : _b.contentStyleClass);\n      },\n      set: function set(value) {\n        this._contentStyleClass = value;\n      }\n    }, {\n      key: \"target\",\n      get: function get() {\n        var _a;\n\n        var value = this._target || ((_a = this.overlayOptions) === null || _a === void 0 ? void 0 : _a.target);\n        return value === undefined ? '@prev' : value;\n      },\n      set: function set(value) {\n        this._target = value;\n      }\n    }, {\n      key: \"appendTo\",\n      get: function get() {\n        var _a;\n\n        return this._appendTo || ((_a = this.overlayOptions) === null || _a === void 0 ? void 0 : _a.appendTo);\n      },\n      set: function set(value) {\n        this._appendTo = value;\n      }\n    }, {\n      key: \"autoZIndex\",\n      get: function get() {\n        var _a;\n\n        var value = this._autoZIndex || ((_a = this.overlayOptions) === null || _a === void 0 ? void 0 : _a.autoZIndex);\n        return value === undefined ? true : value;\n      },\n      set: function set(value) {\n        this._autoZIndex = value;\n      }\n    }, {\n      key: \"baseZIndex\",\n      get: function get() {\n        var _a;\n\n        var value = this._baseZIndex || ((_a = this.overlayOptions) === null || _a === void 0 ? void 0 : _a.baseZIndex);\n        return value === undefined ? 0 : value;\n      },\n      set: function set(value) {\n        this._baseZIndex = value;\n      }\n    }, {\n      key: \"showTransitionOptions\",\n      get: function get() {\n        var _a;\n\n        var value = this._showTransitionOptions || ((_a = this.overlayOptions) === null || _a === void 0 ? void 0 : _a.showTransitionOptions);\n        return value === undefined ? '.12s cubic-bezier(0, 0, 0.2, 1)' : value;\n      },\n      set: function set(value) {\n        this._showTransitionOptions = value;\n      }\n    }, {\n      key: \"hideTransitionOptions\",\n      get: function get() {\n        var _a;\n\n        var value = this._hideTransitionOptions || ((_a = this.overlayOptions) === null || _a === void 0 ? void 0 : _a.hideTransitionOptions);\n        return value === undefined ? '.1s linear' : value;\n      },\n      set: function set(value) {\n        this._hideTransitionOptions = value;\n      }\n    }, {\n      key: \"listener\",\n      get: function get() {\n        var _a;\n\n        return this._listener || ((_a = this.overlayOptions) === null || _a === void 0 ? void 0 : _a.listener);\n      },\n      set: function set(value) {\n        this._listener = value;\n      }\n    }, {\n      key: \"responsive\",\n      get: function get() {\n        var _a;\n\n        return this._responsive || ((_a = this.overlayOptions) === null || _a === void 0 ? void 0 : _a.responsive);\n      },\n      set: function set(val) {\n        this._responsive = val;\n      }\n    }, {\n      key: \"options\",\n      get: function get() {\n        return this._options;\n      },\n      set: function set(val) {\n        this._options = val;\n      }\n    }, {\n      key: \"modal\",\n      get: function get() {\n        var _a, _b;\n\n        return this.mode === 'modal' || this.overlayResponsiveOptions && ((_a = this.window) === null || _a === void 0 ? void 0 : _a.matchMedia(((_b = this.overlayResponsiveOptions.media) === null || _b === void 0 ? void 0 : _b.replace('@media', '')) || \"(max-width: \".concat(this.overlayResponsiveOptions.breakpoint, \")\")).matches);\n      }\n    }, {\n      key: \"overlayMode\",\n      get: function get() {\n        return this.mode || (this.modal ? 'modal' : 'overlay');\n      }\n    }, {\n      key: \"overlayOptions\",\n      get: function get() {\n        var _a;\n\n        return Object.assign(Object.assign({}, (_a = this.config) === null || _a === void 0 ? void 0 : _a.overlayOptions), this.options); // TODO: Improve performance\n      }\n    }, {\n      key: \"overlayResponsiveOptions\",\n      get: function get() {\n        var _a;\n\n        return Object.assign(Object.assign({}, (_a = this.overlayOptions) === null || _a === void 0 ? void 0 : _a.responsive), this.responsive); // TODO: Improve performance\n      }\n    }, {\n      key: \"overlayResponsiveDirection\",\n      get: function get() {\n        var _a;\n\n        return ((_a = this.overlayResponsiveOptions) === null || _a === void 0 ? void 0 : _a.direction) || 'center';\n      }\n    }, {\n      key: \"overlayEl\",\n      get: function get() {\n        var _a;\n\n        return (_a = this.overlayViewChild) === null || _a === void 0 ? void 0 : _a.nativeElement;\n      }\n    }, {\n      key: \"contentEl\",\n      get: function get() {\n        var _a;\n\n        return (_a = this.contentViewChild) === null || _a === void 0 ? void 0 : _a.nativeElement;\n      }\n    }, {\n      key: \"targetEl\",\n      get: function get() {\n        var _a;\n\n        return DomHandler.getTargetElement(this.target, (_a = this.el) === null || _a === void 0 ? void 0 : _a.nativeElement);\n      }\n    }, {\n      key: \"ngAfterContentInit\",\n      value: function ngAfterContentInit() {\n        var _this = this;\n\n        var _a;\n\n        (_a = this.templates) === null || _a === void 0 ? void 0 : _a.forEach(function (item) {\n          switch (item.getType()) {\n            case 'content':\n              _this.contentTemplate = item.template;\n              break;\n            // TODO: new template types may be added.\n\n            default:\n              _this.contentTemplate = item.template;\n              break;\n          }\n        });\n      }\n    }, {\n      key: \"show\",\n      value: function show(overlay) {\n        var isFocus = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n        var _a;\n\n        this.onVisibleChange(true);\n        this.handleEvents('onShow', {\n          overlay: overlay || this.overlayEl,\n          target: this.targetEl,\n          mode: this.overlayMode\n        });\n        isFocus && DomHandler.focus(this.targetEl);\n        this.modal && DomHandler.addClass((_a = this.document) === null || _a === void 0 ? void 0 : _a.body, 'p-overflow-hidden');\n      }\n    }, {\n      key: \"hide\",\n      value: function hide(overlay) {\n        var isFocus = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n        var _a;\n\n        this.onVisibleChange(false);\n        this.handleEvents('onHide', {\n          overlay: overlay || this.overlayEl,\n          target: this.targetEl,\n          mode: this.overlayMode\n        });\n        isFocus && DomHandler.focus(this.targetEl);\n        this.modal && DomHandler.removeClass((_a = this.document) === null || _a === void 0 ? void 0 : _a.body, 'p-overflow-hidden');\n      }\n    }, {\n      key: \"alignOverlay\",\n      value: function alignOverlay() {\n        !this.modal && DomHandler.alignOverlay(this.overlayEl, this.targetEl, this.appendTo);\n      }\n    }, {\n      key: \"onVisibleChange\",\n      value: function onVisibleChange(visible) {\n        this._visible = visible;\n        this.visibleChange.emit(visible);\n      }\n    }, {\n      key: \"onOverlayClick\",\n      value: function onOverlayClick() {\n        this.isOverlayClicked = true;\n      }\n    }, {\n      key: \"onOverlayContentClick\",\n      value: function onOverlayContentClick(event) {\n        this.overlayService.add({\n          originalEvent: event,\n          target: this.targetEl\n        });\n        this.isOverlayContentClicked = true;\n      }\n    }, {\n      key: \"onOverlayContentAnimationStart\",\n      value: function onOverlayContentAnimationStart(event) {\n        var _a;\n\n        switch (event.toState) {\n          case 'visible':\n            this.handleEvents('onBeforeShow', {\n              overlay: this.overlayEl,\n              target: this.targetEl,\n              mode: this.overlayMode\n            });\n\n            if (this.autoZIndex) {\n              ZIndexUtils.set(this.overlayMode, this.overlayEl, this.baseZIndex + ((_a = this.config) === null || _a === void 0 ? void 0 : _a.zIndex[this.overlayMode]));\n            }\n\n            DomHandler.appendOverlay(this.overlayEl, this.appendTo === 'body' ? this.document.body : this.appendTo, this.appendTo);\n            this.alignOverlay();\n            break;\n\n          case 'void':\n            this.handleEvents('onBeforeHide', {\n              overlay: this.overlayEl,\n              target: this.targetEl,\n              mode: this.overlayMode\n            });\n            this.modal && DomHandler.addClass(this.overlayEl, 'p-component-overlay-leave');\n            break;\n        }\n\n        this.handleEvents('onAnimationStart', event);\n      }\n    }, {\n      key: \"onOverlayContentAnimationDone\",\n      value: function onOverlayContentAnimationDone(event) {\n        var container = this.overlayEl || event.element.parentElement;\n\n        switch (event.toState) {\n          case 'visible':\n            this.show(container, true);\n            this.bindListeners();\n            break;\n\n          case 'void':\n            this.hide(container, true);\n            this.unbindListeners();\n            DomHandler.appendOverlay(this.overlayEl, this.targetEl, this.appendTo);\n            ZIndexUtils.clear(container);\n            this.modalVisible = false;\n            break;\n        }\n\n        this.handleEvents('onAnimationDone', event);\n      }\n    }, {\n      key: \"handleEvents\",\n      value: function handleEvents(name, params) {\n        var _a, _b, _c;\n\n        this[name].emit(params);\n        this.options && this.options[name] && this.options[name](params);\n        ((_a = this.config) === null || _a === void 0 ? void 0 : _a.overlayOptions) && ((_b = this.config) === null || _b === void 0 ? void 0 : _b.overlayOptions[name]) && ((_c = this.config) === null || _c === void 0 ? void 0 : _c.overlayOptions[name](params));\n      }\n    }, {\n      key: \"bindListeners\",\n      value: function bindListeners() {\n        this.bindScrollListener();\n        this.bindDocumentClickListener();\n        this.bindDocumentResizeListener();\n      }\n    }, {\n      key: \"unbindListeners\",\n      value: function unbindListeners() {\n        this.unbindScrollListener();\n        this.unbindDocumentClickListener();\n        this.unbindDocumentResizeListener();\n      }\n    }, {\n      key: \"bindScrollListener\",\n      value: function bindScrollListener() {\n        var _this2 = this;\n\n        if (!this.scrollHandler) {\n          this.scrollHandler = new ConnectedOverlayScrollHandler(this.targetEl, function (event) {\n            var valid = _this2.listener ? _this2.listener(event, {\n              type: 'scroll',\n              mode: _this2.overlayMode,\n              valid: true\n            }) : true;\n            valid && _this2.hide(event, true);\n          });\n        }\n\n        this.scrollHandler.bindScrollListener();\n      }\n    }, {\n      key: \"unbindScrollListener\",\n      value: function unbindScrollListener() {\n        if (this.scrollHandler) {\n          this.scrollHandler.unbindScrollListener();\n        }\n      }\n    }, {\n      key: \"bindDocumentClickListener\",\n      value: function bindDocumentClickListener() {\n        var _this3 = this;\n\n        if (!this.documentClickListener) {\n          this.documentClickListener = this.renderer.listen(this.document, 'click', function (event) {\n            var isTargetClicked = _this3.targetEl && (_this3.targetEl.isSameNode(event.target) || !_this3.isOverlayClicked && _this3.targetEl.contains(event.target));\n\n            var isOutsideClicked = !isTargetClicked && !_this3.isOverlayContentClicked;\n            var valid = _this3.listener ? _this3.listener(event, {\n              type: 'outside',\n              mode: _this3.overlayMode,\n              valid: event.which !== 3 && isOutsideClicked\n            }) : isOutsideClicked;\n            valid && _this3.hide(event);\n            _this3.isOverlayClicked = _this3.isOverlayContentClicked = false;\n          });\n        }\n      }\n    }, {\n      key: \"unbindDocumentClickListener\",\n      value: function unbindDocumentClickListener() {\n        if (this.documentClickListener) {\n          this.documentClickListener();\n          this.documentClickListener = null;\n        }\n      }\n    }, {\n      key: \"bindDocumentResizeListener\",\n      value: function bindDocumentResizeListener() {\n        var _this4 = this;\n\n        if (!this.documentResizeListener) {\n          this.documentResizeListener = this.renderer.listen('window', 'resize', function (event) {\n            var valid = _this4.listener ? _this4.listener(event, {\n              type: 'resize',\n              mode: _this4.overlayMode,\n              valid: !DomHandler.isTouchDevice()\n            }) : !DomHandler.isTouchDevice();\n            valid && _this4.hide(event, true);\n          });\n        }\n      }\n    }, {\n      key: \"unbindDocumentResizeListener\",\n      value: function unbindDocumentResizeListener() {\n        if (this.documentResizeListener) {\n          this.documentResizeListener();\n          this.documentResizeListener = null;\n        }\n      }\n    }, {\n      key: \"ngOnDestroy\",\n      value: function ngOnDestroy() {\n        this.hide(this.overlayEl, true);\n\n        if (this.overlayEl) {\n          DomHandler.appendOverlay(this.overlayEl, this.targetEl, this.appendTo);\n          ZIndexUtils.clear(this.overlayEl);\n        }\n\n        if (this.scrollHandler) {\n          this.scrollHandler.destroy();\n          this.scrollHandler = null;\n        }\n\n        this.unbindListeners();\n      }\n    }]);\n\n    return Overlay;\n  }();\n\n  Overlay.ɵfac = function Overlay_Factory(t) {\n    return new (t || Overlay)(i0.ɵɵdirectiveInject(DOCUMENT), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i1.PrimeNGConfig), i0.ɵɵdirectiveInject(i1.OverlayService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n\n  Overlay.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: Overlay,\n    selectors: [[\"p-overlay\"]],\n    contentQueries: function Overlay_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, PrimeTemplate, 4);\n      }\n\n      if (rf & 2) {\n        var _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templates = _t);\n      }\n    },\n    viewQuery: function Overlay_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n        i0.ɵɵviewQuery(_c1, 5);\n      }\n\n      if (rf & 2) {\n        var _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.overlayViewChild = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.contentViewChild = _t.first);\n      }\n    },\n    hostAttrs: [1, \"p-element\"],\n    inputs: {\n      visible: \"visible\",\n      mode: \"mode\",\n      style: \"style\",\n      styleClass: \"styleClass\",\n      contentStyle: \"contentStyle\",\n      contentStyleClass: \"contentStyleClass\",\n      target: \"target\",\n      appendTo: \"appendTo\",\n      autoZIndex: \"autoZIndex\",\n      baseZIndex: \"baseZIndex\",\n      showTransitionOptions: \"showTransitionOptions\",\n      hideTransitionOptions: \"hideTransitionOptions\",\n      listener: \"listener\",\n      responsive: \"responsive\",\n      options: \"options\"\n    },\n    outputs: {\n      visibleChange: \"visibleChange\",\n      onBeforeShow: \"onBeforeShow\",\n      onShow: \"onShow\",\n      onBeforeHide: \"onBeforeHide\",\n      onHide: \"onHide\",\n      onAnimationStart: \"onAnimationStart\",\n      onAnimationDone: \"onAnimationDone\"\n    },\n    features: [i0.ɵɵProvidersFeature([OVERLAY_VALUE_ACCESSOR])],\n    ngContentSelectors: _c7,\n    decls: 1,\n    vars: 1,\n    consts: [[3, \"ngStyle\", \"class\", \"ngClass\", \"click\", 4, \"ngIf\"], [3, \"ngStyle\", \"ngClass\", \"click\"], [\"overlay\", \"\"], [\"content\", \"\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"]],\n    template: function Overlay_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵtemplate(0, Overlay_div_0_Template, 3, 20, \"div\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.modalVisible);\n      }\n    },\n    dependencies: [i2.NgClass, i2.NgIf, i2.NgTemplateOutlet, i2.NgStyle],\n    styles: [\".p-overlay{position:absolute;top:0;left:0}.p-overlay-modal{display:flex;align-items:center;justify-content:center;position:fixed;top:0;left:0;width:100%;height:100%}.p-overlay-content{transform-origin:inherit}.p-overlay-modal>.p-overlay-content{z-index:1;width:90%}.p-overlay-top{align-items:flex-start}.p-overlay-top-start{align-items:flex-start;justify-content:flex-start}.p-overlay-top-end{align-items:flex-start;justify-content:flex-end}.p-overlay-bottom{align-items:flex-end}.p-overlay-bottom-start{align-items:flex-end;justify-content:flex-start}.p-overlay-bottom-end{align-items:flex-end;justify-content:flex-end}.p-overlay-left{justify-content:flex-start}.p-overlay-left-start{justify-content:flex-start;align-items:flex-start}.p-overlay-left-end{justify-content:flex-start;align-items:flex-end}.p-overlay-right{justify-content:flex-end}.p-overlay-right-start{justify-content:flex-end;align-items:flex-start}.p-overlay-right-end{justify-content:flex-end;align-items:flex-end}\\n\"],\n    encapsulation: 2,\n    data: {\n      animation: [trigger('overlayContentAnimation', [transition(':enter', [useAnimation(showOverlayContentAnimation)]), transition(':leave', [useAnimation(hideOverlayContentAnimation)])])]\n    },\n    changeDetection: 0\n  });\n  return Overlay;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nvar OverlayModule = /*#__PURE__*/(function () {\n  var OverlayModule = /*#__PURE__*/_createClass(function OverlayModule() {\n    _classCallCheck(this, OverlayModule);\n  });\n\n  OverlayModule.ɵfac = function OverlayModule_Factory(t) {\n    return new (t || OverlayModule)();\n  };\n\n  OverlayModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: OverlayModule\n  });\n  OverlayModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [CommonModule, SharedModule, SharedModule]\n  });\n  return OverlayModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { OVERLAY_VALUE_ACCESSOR, Overlay, OverlayModule }; //# sourceMappingURL=primeng-overlay.mjs.map","map":null,"metadata":{},"sourceType":"module"}