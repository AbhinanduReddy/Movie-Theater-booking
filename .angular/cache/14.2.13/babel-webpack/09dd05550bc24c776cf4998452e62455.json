{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/prakhyamylavaram/Desktop/SJSU/CMPE-202/Project_Theater/Movie-Theater-booking/ui-components/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _toConsumableArray from \"/Users/prakhyamylavaram/Desktop/SJSU/CMPE-202/Project_Theater/Movie-Theater-booking/ui-components/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _classCallCheck from \"/Users/prakhyamylavaram/Desktop/SJSU/CMPE-202/Project_Theater/Movie-Theater-booking/ui-components/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/prakhyamylavaram/Desktop/SJSU/CMPE-202/Project_Theater/Movie-Theater-booking/ui-components/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport * as i0 from '@angular/core';\nimport { forwardRef, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, ViewChild, ContentChildren, Output, NgModule } from '@angular/core';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { trigger, transition, style, animate } from '@angular/animations';\nimport { InputTextModule } from 'primeng/inputtext';\nimport * as i3 from 'primeng/button';\nimport { ButtonModule } from 'primeng/button';\nimport * as i4 from 'primeng/ripple';\nimport { RippleModule } from 'primeng/ripple';\nimport * as i1 from 'primeng/api';\nimport { TranslationKeys, PrimeTemplate, SharedModule } from 'primeng/api';\nimport { DomHandler, ConnectedOverlayScrollHandler } from 'primeng/dom';\nimport { UniqueComponentId, ObjectUtils, ZIndexUtils } from 'primeng/utils';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport * as i5 from 'primeng/scroller';\nimport { ScrollerModule } from 'primeng/scroller';\nimport * as i6 from 'primeng/autofocus';\nimport { AutoFocusModule } from 'primeng/autofocus';\nvar _c0 = [\"container\"];\nvar _c1 = [\"in\"];\nvar _c2 = [\"multiIn\"];\nvar _c3 = [\"multiContainer\"];\nvar _c4 = [\"ddBtn\"];\nvar _c5 = [\"items\"];\nvar _c6 = [\"scroller\"];\n\nvar _c7 = function _c7(a0, a1) {\n  return {\n    \"p-autocomplete-dd-input\": a0,\n    \"p-disabled\": a1\n  };\n};\n\nfunction AutoComplete_input_2_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r10 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"input\", 8, 9);\n    i0.ɵɵlistener(\"click\", function AutoComplete_input_2_Template_input_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      var ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.onInputClick($event));\n    })(\"input\", function AutoComplete_input_2_Template_input_input_0_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      var ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.onInput($event));\n    })(\"keydown\", function AutoComplete_input_2_Template_input_keydown_0_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      var ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.onKeydown($event));\n    })(\"keyup\", function AutoComplete_input_2_Template_input_keyup_0_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      var ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.onKeyup($event));\n    })(\"focus\", function AutoComplete_input_2_Template_input_focus_0_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      var ctx_r14 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r14.onInputFocus($event));\n    })(\"blur\", function AutoComplete_input_2_Template_input_blur_0_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      var ctx_r15 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r15.onInputBlur($event));\n    })(\"change\", function AutoComplete_input_2_Template_input_change_0_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      var ctx_r16 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r16.onInputChange($event));\n    })(\"paste\", function AutoComplete_input_2_Template_input_paste_0_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      var ctx_r17 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r17.onInputPaste($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r1.inputStyleClass);\n    i0.ɵɵproperty(\"autofocus\", ctx_r1.autofocus)(\"ngStyle\", ctx_r1.inputStyle)(\"autocomplete\", ctx_r1.autocomplete)(\"ngClass\", i0.ɵɵpureFunction2(20, _c7, ctx_r1.dropdown, ctx_r1.disabled))(\"value\", ctx_r1.inputFieldValue)(\"readonly\", ctx_r1.readonly)(\"disabled\", ctx_r1.disabled);\n    i0.ɵɵattribute(\"type\", ctx_r1.type)(\"id\", ctx_r1.inputId)(\"required\", ctx_r1.required)(\"name\", ctx_r1.name)(\"placeholder\", ctx_r1.placeholder)(\"size\", ctx_r1.size)(\"maxlength\", ctx_r1.maxlength)(\"tabindex\", ctx_r1.tabindex)(\"aria-label\", ctx_r1.ariaLabel)(\"aria-labelledby\", ctx_r1.ariaLabelledBy)(\"aria-required\", ctx_r1.required);\n  }\n}\n\nfunction AutoComplete_i_3_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r19 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"i\", 10);\n    i0.ɵɵlistener(\"click\", function AutoComplete_i_3_Template_i_click_0_listener() {\n      i0.ɵɵrestoreView(_r19);\n      var ctx_r18 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r18.clear());\n    });\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AutoComplete_i_4_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r21 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"i\", 10);\n    i0.ɵɵlistener(\"click\", function AutoComplete_i_4_Template_i_click_0_listener() {\n      i0.ɵɵrestoreView(_r21);\n      var ctx_r20 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r20.clear());\n    });\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AutoComplete_ul_5_li_2_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction AutoComplete_ul_5_li_2_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 22);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var val_r25 = i0.ɵɵnextContext().$implicit;\n    var ctx_r28 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r28.resolveFieldData(val_r25));\n  }\n}\n\nfunction AutoComplete_ul_5_li_2_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r32 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"span\", 23);\n    i0.ɵɵlistener(\"click\", function AutoComplete_ul_5_li_2_span_4_Template_span_click_0_listener() {\n      i0.ɵɵrestoreView(_r32);\n      i0.ɵɵnextContext();\n\n      var _r26 = i0.ɵɵreference(1);\n\n      var ctx_r31 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r31.removeItem(_r26));\n    });\n    i0.ɵɵelementEnd();\n  }\n}\n\nvar _c8 = function _c8(a0) {\n  return {\n    $implicit: a0\n  };\n};\n\nfunction AutoComplete_ul_5_li_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 17, 18);\n    i0.ɵɵtemplate(2, AutoComplete_ul_5_li_2_ng_container_2_Template, 1, 0, \"ng-container\", 19);\n    i0.ɵɵtemplate(3, AutoComplete_ul_5_li_2_span_3_Template, 2, 1, \"span\", 20);\n    i0.ɵɵtemplate(4, AutoComplete_ul_5_li_2_span_4_Template, 1, 0, \"span\", 21);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var val_r25 = ctx.$implicit;\n    var ctx_r23 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r23.selectedItemTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(4, _c8, val_r25));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r23.selectedItemTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r23.disabled && !ctx_r23.readonly);\n  }\n}\n\nvar _c9 = function _c9(a0, a1) {\n  return {\n    \"p-disabled\": a0,\n    \"p-focus\": a1\n  };\n};\n\nfunction AutoComplete_ul_5_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r34 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"ul\", 11, 12);\n    i0.ɵɵlistener(\"click\", function AutoComplete_ul_5_Template_ul_click_0_listener() {\n      i0.ɵɵrestoreView(_r34);\n\n      var _r24 = i0.ɵɵreference(5);\n\n      return i0.ɵɵresetView(_r24.focus());\n    });\n    i0.ɵɵtemplate(2, AutoComplete_ul_5_li_2_Template, 5, 6, \"li\", 13);\n    i0.ɵɵelementStart(3, \"li\", 14)(4, \"input\", 15, 16);\n    i0.ɵɵlistener(\"input\", function AutoComplete_ul_5_Template_input_input_4_listener($event) {\n      i0.ɵɵrestoreView(_r34);\n      var ctx_r35 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r35.onInput($event));\n    })(\"click\", function AutoComplete_ul_5_Template_input_click_4_listener($event) {\n      i0.ɵɵrestoreView(_r34);\n      var ctx_r36 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r36.onInputClick($event));\n    })(\"keydown\", function AutoComplete_ul_5_Template_input_keydown_4_listener($event) {\n      i0.ɵɵrestoreView(_r34);\n      var ctx_r37 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r37.onKeydown($event));\n    })(\"keyup\", function AutoComplete_ul_5_Template_input_keyup_4_listener($event) {\n      i0.ɵɵrestoreView(_r34);\n      var ctx_r38 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r38.onKeyup($event));\n    })(\"focus\", function AutoComplete_ul_5_Template_input_focus_4_listener($event) {\n      i0.ɵɵrestoreView(_r34);\n      var ctx_r39 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r39.onInputFocus($event));\n    })(\"blur\", function AutoComplete_ul_5_Template_input_blur_4_listener($event) {\n      i0.ɵɵrestoreView(_r34);\n      var ctx_r40 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r40.onInputBlur($event));\n    })(\"change\", function AutoComplete_ul_5_Template_input_change_4_listener($event) {\n      i0.ɵɵrestoreView(_r34);\n      var ctx_r41 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r41.onInputChange($event));\n    })(\"paste\", function AutoComplete_ul_5_Template_input_paste_4_listener($event) {\n      i0.ɵɵrestoreView(_r34);\n      var ctx_r42 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r42.onInputPaste($event));\n    });\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    var ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(20, _c9, ctx_r4.disabled, ctx_r4.focus));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r4.value);\n    i0.ɵɵadvance(2);\n    i0.ɵɵclassMap(ctx_r4.inputStyleClass);\n    i0.ɵɵproperty(\"autofocus\", ctx_r4.autofocus)(\"disabled\", ctx_r4.disabled)(\"readonly\", ctx_r4.readonly)(\"autocomplete\", ctx_r4.autocomplete)(\"ngStyle\", ctx_r4.inputStyle);\n    i0.ɵɵattribute(\"type\", ctx_r4.type)(\"id\", ctx_r4.inputId)(\"placeholder\", ctx_r4.value && ctx_r4.value.length ? null : ctx_r4.placeholder)(\"tabindex\", ctx_r4.tabindex)(\"maxlength\", ctx_r4.maxlength)(\"aria-label\", ctx_r4.ariaLabel)(\"aria-labelledby\", ctx_r4.ariaLabelledBy)(\"aria-required\", ctx_r4.required)(\"aria-controls\", ctx_r4.listId)(\"aria-expanded\", ctx_r4.overlayVisible)(\"aria-activedescendant\", \"p-highlighted-option\");\n  }\n}\n\nfunction AutoComplete_i_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\", 24);\n  }\n}\n\nfunction AutoComplete_button_7_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r45 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 25, 26);\n    i0.ɵɵlistener(\"click\", function AutoComplete_button_7_Template_button_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r45);\n      var ctx_r44 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r44.handleDropdownClick($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"icon\", ctx_r6.dropdownIcon)(\"disabled\", ctx_r6.disabled);\n    i0.ɵɵattribute(\"aria-label\", ctx_r6.dropdownAriaLabel)(\"tabindex\", ctx_r6.tabindex);\n  }\n}\n\nfunction AutoComplete_div_8_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction AutoComplete_div_8_p_scroller_3_ng_template_2_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nvar _c10 = function _c10(a0, a1) {\n  return {\n    $implicit: a0,\n    options: a1\n  };\n};\n\nfunction AutoComplete_div_8_p_scroller_3_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, AutoComplete_div_8_p_scroller_3_ng_template_2_ng_container_0_Template, 1, 0, \"ng-container\", 19);\n  }\n\n  if (rf & 2) {\n    var items_r56 = ctx.$implicit;\n    var scrollerOptions_r57 = ctx.options;\n    i0.ɵɵnextContext(2);\n\n    var _r50 = i0.ɵɵreference(6);\n\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r50)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(2, _c10, items_r56, scrollerOptions_r57));\n  }\n}\n\nfunction AutoComplete_div_8_p_scroller_3_ng_container_3_ng_template_1_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nvar _c11 = function _c11(a0) {\n  return {\n    options: a0\n  };\n};\n\nfunction AutoComplete_div_8_p_scroller_3_ng_container_3_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, AutoComplete_div_8_p_scroller_3_ng_container_3_ng_template_1_ng_container_0_Template, 1, 0, \"ng-container\", 19);\n  }\n\n  if (rf & 2) {\n    var scrollerOptions_r60 = ctx.options;\n    var ctx_r59 = i0.ɵɵnextContext(4);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r59.loaderTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(2, _c11, scrollerOptions_r60));\n  }\n}\n\nfunction AutoComplete_div_8_p_scroller_3_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, AutoComplete_div_8_p_scroller_3_ng_container_3_ng_template_1_Template, 1, 4, \"ng-template\", 36);\n    i0.ɵɵelementContainerEnd();\n  }\n}\n\nvar _c12 = function _c12(a0) {\n  return {\n    height: a0\n  };\n};\n\nfunction AutoComplete_div_8_p_scroller_3_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r63 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"p-scroller\", 33, 34);\n    i0.ɵɵlistener(\"onLazyLoad\", function AutoComplete_div_8_p_scroller_3_Template_p_scroller_onLazyLoad_0_listener($event) {\n      i0.ɵɵrestoreView(_r63);\n      var ctx_r62 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r62.onLazyLoad.emit($event));\n    });\n    i0.ɵɵtemplate(2, AutoComplete_div_8_p_scroller_3_ng_template_2_Template, 1, 5, \"ng-template\", 35);\n    i0.ɵɵtemplate(3, AutoComplete_div_8_p_scroller_3_ng_container_3_Template, 2, 0, \"ng-container\", 31);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r48 = i0.ɵɵnextContext(2);\n    i0.ɵɵstyleMap(i0.ɵɵpureFunction1(8, _c12, ctx_r48.scrollHeight));\n    i0.ɵɵproperty(\"items\", ctx_r48.suggestions)(\"itemSize\", ctx_r48.virtualScrollItemSize || ctx_r48._itemSize)(\"autoSize\", true)(\"lazy\", ctx_r48.lazy)(\"options\", ctx_r48.virtualScrollOptions);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r48.loaderTemplate);\n  }\n}\n\nfunction AutoComplete_div_8_ng_container_4_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nvar _c13 = function _c13() {\n  return {};\n};\n\nfunction AutoComplete_div_8_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, AutoComplete_div_8_ng_container_4_ng_container_1_Template, 1, 0, \"ng-container\", 19);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n\n    var _r50 = i0.ɵɵreference(6);\n\n    var ctx_r49 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r50)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(3, _c10, ctx_r49.suggestions, i0.ɵɵpureFunction0(2, _c13)));\n  }\n}\n\nfunction AutoComplete_div_8_ng_template_5_ng_container_2_ng_template_1_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var optgroup_r74 = i0.ɵɵnextContext().$implicit;\n    var ctx_r75 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r75.getOptionGroupLabel(optgroup_r74) || \"empty\");\n  }\n}\n\nfunction AutoComplete_div_8_ng_template_5_ng_container_2_ng_template_1_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction AutoComplete_div_8_ng_template_5_ng_container_2_ng_template_1_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction AutoComplete_div_8_ng_template_5_ng_container_2_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 42);\n    i0.ɵɵtemplate(1, AutoComplete_div_8_ng_template_5_ng_container_2_ng_template_1_span_1_Template, 2, 1, \"span\", 31);\n    i0.ɵɵtemplate(2, AutoComplete_div_8_ng_template_5_ng_container_2_ng_template_1_ng_container_2_Template, 1, 0, \"ng-container\", 19);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, AutoComplete_div_8_ng_template_5_ng_container_2_ng_template_1_ng_container_3_Template, 1, 0, \"ng-container\", 19);\n  }\n\n  if (rf & 2) {\n    var optgroup_r74 = ctx.$implicit;\n    var scrollerOptions_r66 = i0.ɵɵnextContext(2).options;\n\n    var _r70 = i0.ɵɵreference(5);\n\n    var ctx_r73 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(6, _c12, scrollerOptions_r66.itemSize + \"px\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r73.groupTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r73.groupTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(8, _c8, optgroup_r74));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r70)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(10, _c8, ctx_r73.getOptionGroupChildren(optgroup_r74)));\n  }\n}\n\nfunction AutoComplete_div_8_ng_template_5_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, AutoComplete_div_8_ng_template_5_ng_container_2_ng_template_1_Template, 4, 12, \"ng-template\", 41);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var items_r65 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", items_r65);\n  }\n}\n\nfunction AutoComplete_div_8_ng_template_5_ng_container_3_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nfunction AutoComplete_div_8_ng_template_5_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, AutoComplete_div_8_ng_template_5_ng_container_3_ng_container_1_Template, 1, 0, \"ng-container\", 19);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var items_r65 = i0.ɵɵnextContext().$implicit;\n\n    var _r70 = i0.ɵɵreference(5);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r70)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(2, _c8, items_r65));\n  }\n}\n\nfunction AutoComplete_div_8_ng_template_5_ng_template_4_li_0_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var option_r85 = i0.ɵɵnextContext().$implicit;\n    var ctx_r87 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r87.resolveFieldData(option_r85));\n  }\n}\n\nfunction AutoComplete_div_8_ng_template_5_ng_template_4_li_0_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nvar _c14 = function _c14(a0) {\n  return {\n    \"p-highlight\": a0\n  };\n};\n\nvar _c15 = function _c15(a0, a1) {\n  return {\n    $implicit: a0,\n    index: a1\n  };\n};\n\nfunction AutoComplete_div_8_ng_template_5_ng_template_4_li_0_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r91 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"li\", 44);\n    i0.ɵɵlistener(\"click\", function AutoComplete_div_8_ng_template_5_ng_template_4_li_0_Template_li_click_0_listener() {\n      var restoredCtx = i0.ɵɵrestoreView(_r91);\n      var option_r85 = restoredCtx.$implicit;\n      var ctx_r90 = i0.ɵɵnextContext(4);\n      return i0.ɵɵresetView(ctx_r90.selectItem(option_r85));\n    });\n    i0.ɵɵtemplate(1, AutoComplete_div_8_ng_template_5_ng_template_4_li_0_span_1_Template, 2, 1, \"span\", 31);\n    i0.ɵɵtemplate(2, AutoComplete_div_8_ng_template_5_ng_template_4_li_0_ng_container_2_Template, 1, 0, \"ng-container\", 19);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var option_r85 = ctx.$implicit;\n    var idx_r86 = ctx.index;\n    var scrollerOptions_r66 = i0.ɵɵnextContext(2).options;\n    var ctx_r84 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(6, _c12, scrollerOptions_r66.itemSize + \"px\"))(\"ngClass\", i0.ɵɵpureFunction1(8, _c14, option_r85 === ctx_r84.highlightOption))(\"id\", ctx_r84.highlightOption == option_r85 ? \"p-highlighted-option\" : \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r84.itemTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r84.itemTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(10, _c15, option_r85, scrollerOptions_r66.getOptions ? scrollerOptions_r66.getOptions(idx_r86) : idx_r86));\n  }\n}\n\nfunction AutoComplete_div_8_ng_template_5_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, AutoComplete_div_8_ng_template_5_ng_template_4_li_0_Template, 3, 13, \"li\", 43);\n  }\n\n  if (rf & 2) {\n    var suggestionsToDisplay_r83 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngForOf\", suggestionsToDisplay_r83);\n  }\n}\n\nfunction AutoComplete_div_8_ng_template_5_li_6_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r93 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r93.emptyMessageLabel, \" \");\n  }\n}\n\nfunction AutoComplete_div_8_ng_template_5_li_6_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, null, 47);\n  }\n}\n\nfunction AutoComplete_div_8_ng_template_5_li_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 45);\n    i0.ɵɵtemplate(1, AutoComplete_div_8_ng_template_5_li_6_ng_container_1_Template, 2, 1, \"ng-container\", 46);\n    i0.ɵɵtemplate(2, AutoComplete_div_8_ng_template_5_li_6_ng_container_2_Template, 2, 0, \"ng-container\", 29);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var scrollerOptions_r66 = i0.ɵɵnextContext().options;\n    var ctx_r72 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(4, _c12, scrollerOptions_r66.itemSize + \"px\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r72.emptyTemplate)(\"ngIfElse\", ctx_r72.empty);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r72.emptyTemplate);\n  }\n}\n\nfunction AutoComplete_div_8_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\", 37, 38);\n    i0.ɵɵtemplate(2, AutoComplete_div_8_ng_template_5_ng_container_2_Template, 2, 1, \"ng-container\", 31);\n    i0.ɵɵtemplate(3, AutoComplete_div_8_ng_template_5_ng_container_3_Template, 2, 4, \"ng-container\", 31);\n    i0.ɵɵtemplate(4, AutoComplete_div_8_ng_template_5_ng_template_4_Template, 1, 1, \"ng-template\", null, 39, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtemplate(6, AutoComplete_div_8_ng_template_5_li_6_Template, 3, 6, \"li\", 40);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var scrollerOptions_r66 = ctx.options;\n    var ctx_r51 = i0.ɵɵnextContext(2);\n    i0.ɵɵstyleMap(scrollerOptions_r66.contentStyle);\n    i0.ɵɵproperty(\"ngClass\", scrollerOptions_r66.contentStyleClass);\n    i0.ɵɵattribute(\"id\", ctx_r51.listId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r51.group);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r51.group);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r51.noResults && ctx_r51.showEmptyMessage);\n  }\n}\n\nfunction AutoComplete_div_8_ng_container_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\n\nvar _c16 = function _c16() {\n  return [\"p-autocomplete-panel p-component\"];\n};\n\nvar _c17 = function _c17(a0, a1) {\n  return {\n    showTransitionParams: a0,\n    hideTransitionParams: a1\n  };\n};\n\nvar _c18 = function _c18(a1) {\n  return {\n    value: \"visible\",\n    params: a1\n  };\n};\n\nfunction AutoComplete_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r98 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 27, 28);\n    i0.ɵɵlistener(\"click\", function AutoComplete_div_8_Template_div_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r98);\n      var ctx_r97 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r97.onOverlayClick($event));\n    })(\"@overlayAnimation.start\", function AutoComplete_div_8_Template_div_animation_overlayAnimation_start_0_listener($event) {\n      i0.ɵɵrestoreView(_r98);\n      var ctx_r99 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r99.onOverlayAnimationStart($event));\n    })(\"@overlayAnimation.done\", function AutoComplete_div_8_Template_div_animation_overlayAnimation_done_0_listener($event) {\n      i0.ɵɵrestoreView(_r98);\n      var ctx_r100 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r100.onOverlayAnimationEnd($event));\n    });\n    i0.ɵɵtemplate(2, AutoComplete_div_8_ng_container_2_Template, 1, 0, \"ng-container\", 29);\n    i0.ɵɵtemplate(3, AutoComplete_div_8_p_scroller_3_Template, 4, 10, \"p-scroller\", 30);\n    i0.ɵɵtemplate(4, AutoComplete_div_8_ng_container_4_Template, 2, 6, \"ng-container\", 31);\n    i0.ɵɵtemplate(5, AutoComplete_div_8_ng_template_5_Template, 7, 7, \"ng-template\", null, 32, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtemplate(7, AutoComplete_div_8_ng_container_7_Template, 1, 0, \"ng-container\", 29);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r7.panelStyleClass);\n    i0.ɵɵstyleProp(\"max-height\", ctx_r7.virtualScroll ? \"auto\" : ctx_r7.scrollHeight);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction0(11, _c16))(\"ngStyle\", ctx_r7.panelStyle)(\"@overlayAnimation\", i0.ɵɵpureFunction1(15, _c18, i0.ɵɵpureFunction2(12, _c17, ctx_r7.showTransitionOptions, ctx_r7.hideTransitionOptions)));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r7.headerTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r7.virtualScroll);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r7.virtualScroll);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r7.footerTemplate);\n  }\n}\n\nvar _c19 = function _c19(a1, a2) {\n  return {\n    \"p-autocomplete p-component\": true,\n    \"p-autocomplete-dd\": a1,\n    \"p-autocomplete-multiple\": a2\n  };\n};\n\nvar AUTOCOMPLETE_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(function () {\n    return AutoComplete;\n  }),\n  multi: true\n};\nvar AutoComplete = /*#__PURE__*/(function () {\n  var AutoComplete = /*#__PURE__*/function () {\n    function AutoComplete(el, renderer, cd, differs, config, overlayService) {\n      _classCallCheck(this, AutoComplete);\n\n      this.el = el;\n      this.renderer = renderer;\n      this.cd = cd;\n      this.differs = differs;\n      this.config = config;\n      this.overlayService = overlayService;\n      this.minLength = 1;\n      this.delay = 300;\n      this.scrollHeight = '200px';\n      this.lazy = false;\n      this.type = 'text';\n      this.autoZIndex = true;\n      this.baseZIndex = 0;\n      this.dropdownIcon = 'pi pi-chevron-down';\n      this.unique = true;\n      this.completeOnFocus = false;\n      this.showClear = false;\n      this.dropdownMode = 'blank';\n      this.showTransitionOptions = '.12s cubic-bezier(0, 0, 0.2, 1)';\n      this.hideTransitionOptions = '.1s linear';\n      this.autocomplete = 'off';\n      this.completeMethod = new EventEmitter();\n      this.onSelect = new EventEmitter();\n      this.onUnselect = new EventEmitter();\n      this.onFocus = new EventEmitter();\n      this.onBlur = new EventEmitter();\n      this.onDropdownClick = new EventEmitter();\n      this.onClear = new EventEmitter();\n      this.onKeyUp = new EventEmitter();\n      this.onShow = new EventEmitter();\n      this.onHide = new EventEmitter();\n      this.onLazyLoad = new EventEmitter();\n\n      this.onModelChange = function () {};\n\n      this.onModelTouched = function () {};\n\n      this.overlayVisible = false;\n      this.focus = false;\n      this.inputFieldValue = null;\n      this.inputValue = null;\n      this.differ = differs.find([]).create(null);\n      this.listId = UniqueComponentId() + '_list';\n    }\n\n    _createClass(AutoComplete, [{\n      key: \"itemSize\",\n      get: function get() {\n        return this._itemSize;\n      },\n      set: function set(val) {\n        this._itemSize = val;\n        console.warn('The itemSize property is deprecated, use virtualScrollItemSize property instead.');\n      }\n    }, {\n      key: \"suggestions\",\n      get: function get() {\n        return this._suggestions;\n      },\n      set: function set(val) {\n        this._suggestions = val;\n        this.handleSuggestionsChange();\n      }\n    }, {\n      key: \"ngAfterViewChecked\",\n      value: function ngAfterViewChecked() {\n        var _this = this;\n\n        //Use timeouts as since Angular 4.2, AfterViewChecked is broken and not called after panel is updated\n        if (this.suggestionsUpdated && this.overlay && this.overlay.offsetParent) {\n          setTimeout(function () {\n            if (_this.overlay) {\n              _this.alignOverlay();\n            }\n          }, 1);\n          this.suggestionsUpdated = false;\n        }\n\n        if (this.highlightOptionChanged) {\n          setTimeout(function () {\n            if (_this.overlay && _this.itemsWrapper) {\n              var listItem = DomHandler.findSingle(_this.overlay, 'li.p-highlight');\n\n              if (listItem) {\n                DomHandler.scrollInView(_this.itemsWrapper, listItem);\n              }\n            }\n          }, 1);\n          this.highlightOptionChanged = false;\n        }\n      }\n    }, {\n      key: \"handleSuggestionsChange\",\n      value: function handleSuggestionsChange() {\n        if (this._suggestions != null && this.loading) {\n          this.highlightOption = null;\n\n          if (this._suggestions.length) {\n            this.noResults = false;\n            this.show();\n            this.suggestionsUpdated = true;\n\n            if (this.autoHighlight) {\n              this.highlightOption = this._suggestions[0];\n            }\n          } else {\n            this.noResults = true;\n\n            if (this.showEmptyMessage) {\n              this.show();\n              this.suggestionsUpdated = true;\n            } else {\n              this.hide();\n            }\n          }\n\n          this.loading = false;\n        }\n      }\n    }, {\n      key: \"ngAfterContentInit\",\n      value: function ngAfterContentInit() {\n        var _this2 = this;\n\n        this.templates.forEach(function (item) {\n          switch (item.getType()) {\n            case 'item':\n              _this2.itemTemplate = item.template;\n              break;\n\n            case 'group':\n              _this2.groupTemplate = item.template;\n              break;\n\n            case 'selectedItem':\n              _this2.selectedItemTemplate = item.template;\n              break;\n\n            case 'header':\n              _this2.headerTemplate = item.template;\n              break;\n\n            case 'empty':\n              _this2.emptyTemplate = item.template;\n              break;\n\n            case 'footer':\n              _this2.footerTemplate = item.template;\n              break;\n\n            case 'loader':\n              _this2.loaderTemplate = item.template;\n              break;\n\n            default:\n              _this2.itemTemplate = item.template;\n              break;\n          }\n        });\n      }\n    }, {\n      key: \"writeValue\",\n      value: function writeValue(value) {\n        this.value = value;\n        this.filled = this.value && this.value != '';\n        this.updateInputField();\n        this.cd.markForCheck();\n      }\n    }, {\n      key: \"getOptionGroupChildren\",\n      value: function getOptionGroupChildren(optionGroup) {\n        return this.optionGroupChildren ? ObjectUtils.resolveFieldData(optionGroup, this.optionGroupChildren) : optionGroup.items;\n      }\n    }, {\n      key: \"getOptionGroupLabel\",\n      value: function getOptionGroupLabel(optionGroup) {\n        return this.optionGroupLabel ? ObjectUtils.resolveFieldData(optionGroup, this.optionGroupLabel) : optionGroup.label != undefined ? optionGroup.label : optionGroup;\n      }\n    }, {\n      key: \"registerOnChange\",\n      value: function registerOnChange(fn) {\n        this.onModelChange = fn;\n      }\n    }, {\n      key: \"registerOnTouched\",\n      value: function registerOnTouched(fn) {\n        this.onModelTouched = fn;\n      }\n    }, {\n      key: \"setDisabledState\",\n      value: function setDisabledState(val) {\n        this.disabled = val;\n        this.cd.markForCheck();\n      }\n    }, {\n      key: \"onInput\",\n      value: function onInput(event) {\n        var _this3 = this;\n\n        // When an input element with a placeholder is clicked, the onInput event is invoked in IE.\n        if (!this.inputKeyDown && DomHandler.isIE()) {\n          return;\n        }\n\n        if (this.timeout) {\n          clearTimeout(this.timeout);\n        }\n\n        var value = event.target.value;\n        this.inputValue = value;\n\n        if (!this.multiple && !this.forceSelection) {\n          this.onModelChange(value);\n        }\n\n        if (value.length === 0 && !this.multiple) {\n          this.value = null;\n          this.hide();\n          this.onClear.emit(event);\n          this.onModelChange(value);\n        }\n\n        if (value.length >= this.minLength) {\n          this.timeout = setTimeout(function () {\n            _this3.search(event, value);\n          }, this.delay);\n        } else {\n          this.hide();\n        }\n\n        this.updateFilledState();\n        this.inputKeyDown = false;\n      }\n    }, {\n      key: \"onInputClick\",\n      value: function onInputClick(event) {\n        if (this.documentClickListener) {\n          this.inputClick = true;\n        }\n      }\n    }, {\n      key: \"search\",\n      value: function search(event, query) {\n        //allow empty string but not undefined or null\n        if (query === undefined || query === null) {\n          return;\n        }\n\n        this.loading = true;\n        this.completeMethod.emit({\n          originalEvent: event,\n          query: query\n        });\n      }\n    }, {\n      key: \"selectItem\",\n      value: function selectItem(option) {\n        var focus = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n        if (this.forceSelectionUpdateModelTimeout) {\n          clearTimeout(this.forceSelectionUpdateModelTimeout);\n          this.forceSelectionUpdateModelTimeout = null;\n        }\n\n        if (this.multiple) {\n          this.multiInputEL.nativeElement.value = '';\n          this.value = this.value || [];\n\n          if (!this.isSelected(option) || !this.unique) {\n            this.value = [].concat(_toConsumableArray(this.value), [option]);\n            this.onModelChange(this.value);\n          }\n        } else {\n          this.inputEL.nativeElement.value = this.resolveFieldData(option);\n          this.value = option;\n          this.onModelChange(this.value);\n        }\n\n        this.onSelect.emit(option);\n        this.updateFilledState();\n\n        if (focus) {\n          this.itemClicked = true;\n          this.focusInput();\n        }\n      }\n    }, {\n      key: \"show\",\n      value: function show() {\n        if (this.multiInputEL || this.inputEL) {\n          var hasFocus = this.multiple ? this.multiInputEL.nativeElement.ownerDocument.activeElement == this.multiInputEL.nativeElement : this.inputEL.nativeElement.ownerDocument.activeElement == this.inputEL.nativeElement;\n\n          if (!this.overlayVisible && hasFocus) {\n            this.overlayVisible = true;\n          }\n        }\n      }\n    }, {\n      key: \"clear\",\n      value: function clear() {\n        if (this.multiple) {\n          this.value = null;\n        } else {\n          this.inputValue = null;\n          this.inputEL.nativeElement.value = '';\n        }\n\n        this.updateFilledState();\n        this.onModelChange(this.value);\n        this.onClear.emit();\n      }\n    }, {\n      key: \"onOverlayAnimationStart\",\n      value: function onOverlayAnimationStart(event) {\n        var _a;\n\n        switch (event.toState) {\n          case 'visible':\n            this.overlay = event.element;\n            this.itemsWrapper = this.virtualScroll ? DomHandler.findSingle(this.overlay, '.p-scroller') : this.overlay;\n            this.virtualScroll && ((_a = this.scroller) === null || _a === void 0 ? void 0 : _a.setContentEl(this.itemsViewChild.nativeElement));\n            this.appendOverlay();\n\n            if (this.autoZIndex) {\n              ZIndexUtils.set('overlay', this.overlay, this.baseZIndex + this.config.zIndex.overlay);\n            }\n\n            this.alignOverlay();\n            this.bindDocumentClickListener();\n            this.bindDocumentResizeListener();\n            this.bindScrollListener();\n            this.onShow.emit(event);\n            break;\n\n          case 'void':\n            this.onOverlayHide();\n            break;\n        }\n      }\n    }, {\n      key: \"onOverlayAnimationEnd\",\n      value: function onOverlayAnimationEnd(event) {\n        switch (event.toState) {\n          case 'void':\n            if (this.autoZIndex) {\n              ZIndexUtils.clear(event.element);\n            }\n\n            break;\n        }\n      }\n    }, {\n      key: \"onOverlayClick\",\n      value: function onOverlayClick(event) {\n        this.overlayService.add({\n          originalEvent: event,\n          target: this.el.nativeElement\n        });\n      }\n    }, {\n      key: \"appendOverlay\",\n      value: function appendOverlay() {\n        if (this.appendTo) {\n          if (this.appendTo === 'body') document.body.appendChild(this.overlay);else DomHandler.appendChild(this.overlay, this.appendTo);\n\n          if (!this.overlay.style.minWidth) {\n            this.overlay.style.minWidth = DomHandler.getWidth(this.el.nativeElement.children[0]) + 'px';\n          }\n        }\n      }\n    }, {\n      key: \"resolveFieldData\",\n      value: function resolveFieldData(value) {\n        var data = this.field ? ObjectUtils.resolveFieldData(value, this.field) : value;\n        return data !== (null || undefined) ? data : '';\n      }\n    }, {\n      key: \"restoreOverlayAppend\",\n      value: function restoreOverlayAppend() {\n        if (this.overlay && this.appendTo) {\n          this.el.nativeElement.appendChild(this.overlay);\n        }\n      }\n    }, {\n      key: \"alignOverlay\",\n      value: function alignOverlay() {\n        if (this.appendTo) DomHandler.absolutePosition(this.overlay, this.multiple ? this.multiContainerEL.nativeElement : this.inputEL.nativeElement);else DomHandler.relativePosition(this.overlay, this.multiple ? this.multiContainerEL.nativeElement : this.inputEL.nativeElement);\n      }\n    }, {\n      key: \"hide\",\n      value: function hide() {\n        this.overlayVisible = false;\n        this.cd.markForCheck();\n      }\n    }, {\n      key: \"handleDropdownClick\",\n      value: function handleDropdownClick(event) {\n        if (!this.overlayVisible) {\n          this.focusInput();\n          var queryValue = this.multiple ? this.multiInputEL.nativeElement.value : this.inputEL.nativeElement.value;\n          if (this.dropdownMode === 'blank') this.search(event, '');else if (this.dropdownMode === 'current') this.search(event, queryValue);\n          this.onDropdownClick.emit({\n            originalEvent: event,\n            query: queryValue\n          });\n        } else {\n          this.hide();\n        }\n      }\n    }, {\n      key: \"focusInput\",\n      value: function focusInput() {\n        if (this.multiple) this.multiInputEL.nativeElement.focus();else this.inputEL.nativeElement.focus();\n      }\n    }, {\n      key: \"emptyMessageLabel\",\n      get: function get() {\n        return this.emptyMessage || this.config.getTranslation(TranslationKeys.EMPTY_MESSAGE);\n      }\n    }, {\n      key: \"removeItem\",\n      value: function removeItem(item) {\n        var itemIndex = DomHandler.index(item);\n        var removedValue = this.value[itemIndex];\n        this.value = this.value.filter(function (val, i) {\n          return i != itemIndex;\n        });\n        this.onModelChange(this.value);\n        this.updateFilledState();\n        this.onUnselect.emit(removedValue);\n      }\n    }, {\n      key: \"onKeydown\",\n      value: function onKeydown(event) {\n        if (this.overlayVisible) {\n          switch (event.which) {\n            //down\n            case 40:\n              if (this.group) {\n                var highlightItemIndex = this.findOptionGroupIndex(this.highlightOption, this.suggestions);\n\n                if (highlightItemIndex !== -1) {\n                  var _nextItemIndex = highlightItemIndex.itemIndex + 1;\n\n                  if (_nextItemIndex < this.getOptionGroupChildren(this.suggestions[highlightItemIndex.groupIndex]).length) {\n                    this.highlightOption = this.getOptionGroupChildren(this.suggestions[highlightItemIndex.groupIndex])[_nextItemIndex];\n                    this.highlightOptionChanged = true;\n                  } else if (this.suggestions[highlightItemIndex.groupIndex + 1]) {\n                    this.highlightOption = this.getOptionGroupChildren(this.suggestions[highlightItemIndex.groupIndex + 1])[0];\n                    this.highlightOptionChanged = true;\n                  }\n                } else {\n                  this.highlightOption = this.getOptionGroupChildren(this.suggestions[0])[0];\n                }\n              } else {\n                var _highlightItemIndex = this.findOptionIndex(this.highlightOption, this.suggestions);\n\n                if (_highlightItemIndex != -1) {\n                  var nextItemIndex = _highlightItemIndex + 1;\n\n                  if (nextItemIndex != this.suggestions.length) {\n                    this.highlightOption = this.suggestions[nextItemIndex];\n                    this.highlightOptionChanged = true;\n                  }\n                } else {\n                  this.highlightOption = this.suggestions[0];\n                }\n              }\n\n              event.preventDefault();\n              break;\n            //up\n\n            case 38:\n              if (this.group) {\n                var _highlightItemIndex2 = this.findOptionGroupIndex(this.highlightOption, this.suggestions);\n\n                if (_highlightItemIndex2 !== -1) {\n                  var prevItemIndex = _highlightItemIndex2.itemIndex - 1;\n\n                  if (prevItemIndex >= 0) {\n                    this.highlightOption = this.getOptionGroupChildren(this.suggestions[_highlightItemIndex2.groupIndex])[prevItemIndex];\n                    this.highlightOptionChanged = true;\n                  } else if (prevItemIndex < 0) {\n                    var prevGroup = this.suggestions[_highlightItemIndex2.groupIndex - 1];\n\n                    if (prevGroup) {\n                      this.highlightOption = this.getOptionGroupChildren(prevGroup)[this.getOptionGroupChildren(prevGroup).length - 1];\n                      this.highlightOptionChanged = true;\n                    }\n                  }\n                }\n              } else {\n                var _highlightItemIndex3 = this.findOptionIndex(this.highlightOption, this.suggestions);\n\n                if (_highlightItemIndex3 > 0) {\n                  var _prevItemIndex = _highlightItemIndex3 - 1;\n\n                  this.highlightOption = this.suggestions[_prevItemIndex];\n                  this.highlightOptionChanged = true;\n                }\n              }\n\n              event.preventDefault();\n              break;\n            //enter\n\n            case 13:\n              if (this.highlightOption) {\n                this.selectItem(this.highlightOption);\n                this.hide();\n              }\n\n              event.preventDefault();\n              break;\n            //escape\n\n            case 27:\n              this.hide();\n              event.preventDefault();\n              break;\n            //tab\n\n            case 9:\n              if (this.highlightOption) {\n                this.selectItem(this.highlightOption);\n              }\n\n              this.hide();\n              break;\n          }\n        } else {\n          if (event.which === 40 && this.suggestions) {\n            this.search(event, event.target.value);\n          } else if (event.ctrlKey && event.key === 'z' && !this.multiple) {\n            this.inputEL.nativeElement.value = this.resolveFieldData(null);\n            this.value = '';\n            this.onModelChange(this.value);\n          } else if (event.ctrlKey && event.key === 'z' && this.multiple) {\n            this.value.pop();\n            this.onModelChange(this.value);\n            this.updateFilledState();\n          }\n        }\n\n        if (this.multiple) {\n          switch (event.which) {\n            //backspace\n            case 8:\n              if (this.value && this.value.length && !this.multiInputEL.nativeElement.value) {\n                this.value = _toConsumableArray(this.value);\n                var removedValue = this.value.pop();\n                this.onModelChange(this.value);\n                this.updateFilledState();\n                this.onUnselect.emit(removedValue);\n              }\n\n              break;\n          }\n        }\n\n        this.inputKeyDown = true;\n      }\n    }, {\n      key: \"onKeyup\",\n      value: function onKeyup(event) {\n        this.onKeyUp.emit(event);\n      }\n    }, {\n      key: \"onInputFocus\",\n      value: function onInputFocus(event) {\n        if (!this.itemClicked && this.completeOnFocus) {\n          var queryValue = this.multiple ? this.multiInputEL.nativeElement.value : this.inputEL.nativeElement.value;\n          this.search(event, queryValue);\n        }\n\n        this.focus = true;\n        this.onFocus.emit(event);\n        this.itemClicked = false;\n      }\n    }, {\n      key: \"onInputBlur\",\n      value: function onInputBlur(event) {\n        this.focus = false;\n        this.onModelTouched();\n        this.onBlur.emit(event);\n      }\n    }, {\n      key: \"onInputChange\",\n      value: function onInputChange(event) {\n        var _this4 = this;\n\n        if (this.forceSelection) {\n          var valid = false;\n          var inputValue = event.target.value.trim();\n\n          if (this.suggestions) {\n            var _iterator = _createForOfIteratorHelper(this.suggestions),\n                _step;\n\n            try {\n              var _loop = function _loop() {\n                var suggestion = _step.value;\n                var itemValue = _this4.field ? ObjectUtils.resolveFieldData(suggestion, _this4.field) : suggestion;\n\n                if (itemValue && inputValue === itemValue.trim()) {\n                  valid = true;\n                  _this4.forceSelectionUpdateModelTimeout = setTimeout(function () {\n                    _this4.selectItem(suggestion, false);\n                  }, 250);\n                  return 1; // break\n                }\n              };\n\n              for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                if (_loop()) break;\n              }\n            } catch (err) {\n              _iterator.e(err);\n            } finally {\n              _iterator.f();\n            }\n          }\n\n          if (!valid) {\n            if (this.multiple) {\n              this.multiInputEL.nativeElement.value = '';\n            } else {\n              this.value = null;\n              this.inputEL.nativeElement.value = '';\n            }\n\n            this.onClear.emit(event);\n            this.onModelChange(this.value);\n            this.updateFilledState();\n          }\n        }\n      }\n    }, {\n      key: \"onInputPaste\",\n      value: function onInputPaste(event) {\n        this.onKeydown(event);\n      }\n    }, {\n      key: \"isSelected\",\n      value: function isSelected(val) {\n        var selected = false;\n\n        if (this.value && this.value.length) {\n          for (var i = 0; i < this.value.length; i++) {\n            if (ObjectUtils.equals(this.value[i], val, this.dataKey)) {\n              selected = true;\n              break;\n            }\n          }\n        }\n\n        return selected;\n      }\n    }, {\n      key: \"findOptionIndex\",\n      value: function findOptionIndex(option, suggestions) {\n        var index = -1;\n\n        if (suggestions) {\n          for (var i = 0; i < suggestions.length; i++) {\n            if (ObjectUtils.equals(option, suggestions[i])) {\n              index = i;\n              break;\n            }\n          }\n        }\n\n        return index;\n      }\n    }, {\n      key: \"findOptionGroupIndex\",\n      value: function findOptionGroupIndex(val, opts) {\n        var groupIndex, itemIndex;\n\n        if (opts) {\n          for (var i = 0; i < opts.length; i++) {\n            groupIndex = i;\n            itemIndex = this.findOptionIndex(val, this.getOptionGroupChildren(opts[i]));\n\n            if (itemIndex !== -1) {\n              break;\n            }\n          }\n        }\n\n        if (itemIndex !== -1) {\n          return {\n            groupIndex: groupIndex,\n            itemIndex: itemIndex\n          };\n        } else {\n          return -1;\n        }\n      }\n    }, {\n      key: \"updateFilledState\",\n      value: function updateFilledState() {\n        if (this.multiple) this.filled = this.value && this.value.length || this.multiInputEL && this.multiInputEL.nativeElement && this.multiInputEL.nativeElement.value != '';else this.filled = this.inputFieldValue && this.inputFieldValue != '' || this.inputEL && this.inputEL.nativeElement && this.inputEL.nativeElement.value != '';\n      }\n    }, {\n      key: \"updateInputField\",\n      value: function updateInputField() {\n        var formattedValue = this.resolveFieldData(this.value);\n        this.inputFieldValue = formattedValue;\n\n        if (this.inputEL && this.inputEL.nativeElement) {\n          this.inputEL.nativeElement.value = formattedValue;\n        }\n\n        this.updateFilledState();\n      }\n    }, {\n      key: \"bindDocumentClickListener\",\n      value: function bindDocumentClickListener() {\n        var _this5 = this;\n\n        if (!this.documentClickListener) {\n          var documentTarget = this.el ? this.el.nativeElement.ownerDocument : 'document';\n          this.documentClickListener = this.renderer.listen(documentTarget, 'click', function (event) {\n            if (event.which === 3) {\n              return;\n            }\n\n            if (!_this5.inputClick && !_this5.isDropdownClick(event)) {\n              _this5.hide();\n            }\n\n            _this5.inputClick = false;\n\n            _this5.cd.markForCheck();\n          });\n        }\n      }\n    }, {\n      key: \"isDropdownClick\",\n      value: function isDropdownClick(event) {\n        if (this.dropdown) {\n          var target = event.target;\n          return target === this.dropdownButton.nativeElement || target.parentNode === this.dropdownButton.nativeElement;\n        } else {\n          return false;\n        }\n      }\n    }, {\n      key: \"unbindDocumentClickListener\",\n      value: function unbindDocumentClickListener() {\n        if (this.documentClickListener) {\n          this.documentClickListener();\n          this.documentClickListener = null;\n        }\n      }\n    }, {\n      key: \"bindDocumentResizeListener\",\n      value: function bindDocumentResizeListener() {\n        this.documentResizeListener = this.onWindowResize.bind(this);\n        window.addEventListener('resize', this.documentResizeListener);\n      }\n    }, {\n      key: \"unbindDocumentResizeListener\",\n      value: function unbindDocumentResizeListener() {\n        if (this.documentResizeListener) {\n          window.removeEventListener('resize', this.documentResizeListener);\n          this.documentResizeListener = null;\n        }\n      }\n    }, {\n      key: \"onWindowResize\",\n      value: function onWindowResize() {\n        if (this.overlayVisible && !DomHandler.isTouchDevice()) {\n          this.hide();\n        }\n      }\n    }, {\n      key: \"bindScrollListener\",\n      value: function bindScrollListener() {\n        var _this6 = this;\n\n        if (!this.scrollHandler) {\n          this.scrollHandler = new ConnectedOverlayScrollHandler(this.containerEL.nativeElement, function () {\n            if (_this6.overlayVisible) {\n              _this6.hide();\n            }\n          });\n        }\n\n        this.scrollHandler.bindScrollListener();\n      }\n    }, {\n      key: \"unbindScrollListener\",\n      value: function unbindScrollListener() {\n        if (this.scrollHandler) {\n          this.scrollHandler.unbindScrollListener();\n        }\n      }\n    }, {\n      key: \"onOverlayHide\",\n      value: function onOverlayHide() {\n        this.unbindDocumentClickListener();\n        this.unbindDocumentResizeListener();\n        this.unbindScrollListener();\n\n        if (this.overlay) {\n          this.overlay = null;\n          this.onHide.emit();\n        }\n      }\n    }, {\n      key: \"ngOnDestroy\",\n      value: function ngOnDestroy() {\n        if (this.forceSelectionUpdateModelTimeout) {\n          clearTimeout(this.forceSelectionUpdateModelTimeout);\n          this.forceSelectionUpdateModelTimeout = null;\n        }\n\n        if (this.scrollHandler) {\n          this.scrollHandler.destroy();\n          this.scrollHandler = null;\n        }\n\n        if (this.overlay) {\n          ZIndexUtils.clear(this.overlay);\n        }\n\n        this.restoreOverlayAppend();\n        this.onOverlayHide();\n      }\n    }]);\n\n    return AutoComplete;\n  }();\n\n  AutoComplete.ɵfac = function AutoComplete_Factory(t) {\n    return new (t || AutoComplete)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.IterableDiffers), i0.ɵɵdirectiveInject(i1.PrimeNGConfig), i0.ɵɵdirectiveInject(i1.OverlayService));\n  };\n\n  AutoComplete.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: AutoComplete,\n    selectors: [[\"p-autoComplete\"]],\n    contentQueries: function AutoComplete_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, PrimeTemplate, 4);\n      }\n\n      if (rf & 2) {\n        var _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templates = _t);\n      }\n    },\n    viewQuery: function AutoComplete_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n        i0.ɵɵviewQuery(_c1, 5);\n        i0.ɵɵviewQuery(_c2, 5);\n        i0.ɵɵviewQuery(_c3, 5);\n        i0.ɵɵviewQuery(_c4, 5);\n        i0.ɵɵviewQuery(_c5, 5);\n        i0.ɵɵviewQuery(_c6, 5);\n      }\n\n      if (rf & 2) {\n        var _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.containerEL = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.inputEL = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.multiInputEL = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.multiContainerEL = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dropdownButton = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.itemsViewChild = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.scroller = _t.first);\n      }\n    },\n    hostAttrs: [1, \"p-element\", \"p-inputwrapper\"],\n    hostVars: 6,\n    hostBindings: function AutoComplete_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"p-inputwrapper-filled\", ctx.filled)(\"p-inputwrapper-focus\", ctx.focus && !ctx.disabled || ctx.autofocus || ctx.overlayVisible)(\"p-autocomplete-clearable\", ctx.showClear && !ctx.disabled);\n      }\n    },\n    inputs: {\n      minLength: \"minLength\",\n      delay: \"delay\",\n      style: \"style\",\n      panelStyle: \"panelStyle\",\n      styleClass: \"styleClass\",\n      panelStyleClass: \"panelStyleClass\",\n      inputStyle: \"inputStyle\",\n      inputId: \"inputId\",\n      inputStyleClass: \"inputStyleClass\",\n      placeholder: \"placeholder\",\n      readonly: \"readonly\",\n      disabled: \"disabled\",\n      scrollHeight: \"scrollHeight\",\n      lazy: \"lazy\",\n      virtualScroll: \"virtualScroll\",\n      virtualScrollItemSize: \"virtualScrollItemSize\",\n      virtualScrollOptions: \"virtualScrollOptions\",\n      maxlength: \"maxlength\",\n      name: \"name\",\n      required: \"required\",\n      size: \"size\",\n      appendTo: \"appendTo\",\n      autoHighlight: \"autoHighlight\",\n      forceSelection: \"forceSelection\",\n      type: \"type\",\n      autoZIndex: \"autoZIndex\",\n      baseZIndex: \"baseZIndex\",\n      ariaLabel: \"ariaLabel\",\n      dropdownAriaLabel: \"dropdownAriaLabel\",\n      ariaLabelledBy: \"ariaLabelledBy\",\n      dropdownIcon: \"dropdownIcon\",\n      unique: \"unique\",\n      group: \"group\",\n      completeOnFocus: \"completeOnFocus\",\n      showClear: \"showClear\",\n      field: \"field\",\n      dropdown: \"dropdown\",\n      showEmptyMessage: \"showEmptyMessage\",\n      dropdownMode: \"dropdownMode\",\n      multiple: \"multiple\",\n      tabindex: \"tabindex\",\n      dataKey: \"dataKey\",\n      emptyMessage: \"emptyMessage\",\n      showTransitionOptions: \"showTransitionOptions\",\n      hideTransitionOptions: \"hideTransitionOptions\",\n      autofocus: \"autofocus\",\n      autocomplete: \"autocomplete\",\n      optionGroupChildren: \"optionGroupChildren\",\n      optionGroupLabel: \"optionGroupLabel\",\n      itemSize: \"itemSize\",\n      suggestions: \"suggestions\"\n    },\n    outputs: {\n      completeMethod: \"completeMethod\",\n      onSelect: \"onSelect\",\n      onUnselect: \"onUnselect\",\n      onFocus: \"onFocus\",\n      onBlur: \"onBlur\",\n      onDropdownClick: \"onDropdownClick\",\n      onClear: \"onClear\",\n      onKeyUp: \"onKeyUp\",\n      onShow: \"onShow\",\n      onHide: \"onHide\",\n      onLazyLoad: \"onLazyLoad\"\n    },\n    features: [i0.ɵɵProvidersFeature([AUTOCOMPLETE_VALUE_ACCESSOR])],\n    decls: 9,\n    vars: 14,\n    consts: [[3, \"ngClass\", \"ngStyle\"], [\"container\", \"\"], [\"pAutoFocus\", \"\", \"class\", \"p-autocomplete-input p-inputtext p-component\", \"aria-autocomplete\", \"list\", \"role\", \"searchbox\", 3, \"autofocus\", \"ngStyle\", \"class\", \"autocomplete\", \"ngClass\", \"value\", \"readonly\", \"disabled\", \"click\", \"input\", \"keydown\", \"keyup\", \"focus\", \"blur\", \"change\", \"paste\", 4, \"ngIf\"], [\"class\", \"p-autocomplete-clear-icon pi pi-times\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"p-autocomplete-multiple-container p-component p-inputtext\", 3, \"ngClass\", \"click\", 4, \"ngIf\"], [\"class\", \"p-autocomplete-loader pi pi-spinner pi-spin\", 4, \"ngIf\"], [\"type\", \"button\", \"pButton\", \"\", \"class\", \"p-autocomplete-dropdown\", \"pRipple\", \"\", 3, \"icon\", \"disabled\", \"click\", 4, \"ngIf\"], [3, \"ngClass\", \"max-height\", \"ngStyle\", \"class\", \"click\", 4, \"ngIf\"], [\"pAutoFocus\", \"\", \"aria-autocomplete\", \"list\", \"role\", \"searchbox\", 1, \"p-autocomplete-input\", \"p-inputtext\", \"p-component\", 3, \"autofocus\", \"ngStyle\", \"autocomplete\", \"ngClass\", \"value\", \"readonly\", \"disabled\", \"click\", \"input\", \"keydown\", \"keyup\", \"focus\", \"blur\", \"change\", \"paste\"], [\"in\", \"\"], [1, \"p-autocomplete-clear-icon\", \"pi\", \"pi-times\", 3, \"click\"], [1, \"p-autocomplete-multiple-container\", \"p-component\", \"p-inputtext\", 3, \"ngClass\", \"click\"], [\"multiContainer\", \"\"], [\"class\", \"p-autocomplete-token\", 4, \"ngFor\", \"ngForOf\"], [1, \"p-autocomplete-input-token\"], [\"pAutoFocus\", \"\", \"aria-autocomplete\", \"list\", \"role\", \"searchbox\", \"aria-haspopup\", \"true\", 3, \"autofocus\", \"disabled\", \"readonly\", \"autocomplete\", \"ngStyle\", \"input\", \"click\", \"keydown\", \"keyup\", \"focus\", \"blur\", \"change\", \"paste\"], [\"multiIn\", \"\"], [1, \"p-autocomplete-token\"], [\"token\", \"\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [\"class\", \"p-autocomplete-token-label\", 4, \"ngIf\"], [\"class\", \"p-autocomplete-token-icon pi pi-times-circle\", 3, \"click\", 4, \"ngIf\"], [1, \"p-autocomplete-token-label\"], [1, \"p-autocomplete-token-icon\", \"pi\", \"pi-times-circle\", 3, \"click\"], [1, \"p-autocomplete-loader\", \"pi\", \"pi-spinner\", \"pi-spin\"], [\"type\", \"button\", \"pButton\", \"\", \"pRipple\", \"\", 1, \"p-autocomplete-dropdown\", 3, \"icon\", \"disabled\", \"click\"], [\"ddBtn\", \"\"], [3, \"ngClass\", \"ngStyle\", \"click\"], [\"panel\", \"\"], [4, \"ngTemplateOutlet\"], [3, \"items\", \"style\", \"itemSize\", \"autoSize\", \"lazy\", \"options\", \"onLazyLoad\", 4, \"ngIf\"], [4, \"ngIf\"], [\"buildInItems\", \"\"], [3, \"items\", \"itemSize\", \"autoSize\", \"lazy\", \"options\", \"onLazyLoad\"], [\"scroller\", \"\"], [\"pTemplate\", \"content\"], [\"pTemplate\", \"loader\"], [\"role\", \"listbox\", 1, \"p-autocomplete-items\", 3, \"ngClass\"], [\"items\", \"\"], [\"itemslist\", \"\"], [\"class\", \"p-autocomplete-empty-message\", 3, \"ngStyle\", 4, \"ngIf\"], [\"ngFor\", \"\", 3, \"ngForOf\"], [1, \"p-autocomplete-item-group\", 3, \"ngStyle\"], [\"role\", \"option\", \"class\", \"p-autocomplete-item\", \"pRipple\", \"\", 3, \"ngStyle\", \"ngClass\", \"id\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"role\", \"option\", \"pRipple\", \"\", 1, \"p-autocomplete-item\", 3, \"ngStyle\", \"ngClass\", \"id\", \"click\"], [1, \"p-autocomplete-empty-message\", 3, \"ngStyle\"], [4, \"ngIf\", \"ngIfElse\"], [\"empty\", \"\"]],\n    template: function AutoComplete_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"span\", 0, 1);\n        i0.ɵɵtemplate(2, AutoComplete_input_2_Template, 2, 23, \"input\", 2);\n        i0.ɵɵtemplate(3, AutoComplete_i_3_Template, 1, 0, \"i\", 3);\n        i0.ɵɵtemplate(4, AutoComplete_i_4_Template, 1, 0, \"i\", 3);\n        i0.ɵɵtemplate(5, AutoComplete_ul_5_Template, 6, 23, \"ul\", 4);\n        i0.ɵɵtemplate(6, AutoComplete_i_6_Template, 1, 0, \"i\", 5);\n        i0.ɵɵtemplate(7, AutoComplete_button_7_Template, 2, 4, \"button\", 6);\n        i0.ɵɵtemplate(8, AutoComplete_div_8_Template, 8, 17, \"div\", 7);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵclassMap(ctx.styleClass);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(11, _c19, ctx.dropdown, ctx.multiple))(\"ngStyle\", ctx.style);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", !ctx.multiple);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.multiple && ctx.filled && !ctx.disabled && ctx.showClear);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.multiple && ctx.filled && !ctx.disabled && ctx.showClear);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.multiple);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.loading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.dropdown);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.overlayVisible);\n      }\n    },\n    dependencies: [i2.NgClass, i2.NgForOf, i2.NgIf, i2.NgTemplateOutlet, i2.NgStyle, i3.ButtonDirective, i1.PrimeTemplate, i4.Ripple, i5.Scroller, i6.AutoFocus],\n    styles: [\".p-autocomplete{display:inline-flex;position:relative}.p-autocomplete-loader{position:absolute;top:50%;margin-top:-.5rem}.p-autocomplete-dd .p-autocomplete-input{flex:1 1 auto;width:1%}.p-autocomplete-dd .p-autocomplete-input,.p-autocomplete-dd .p-autocomplete-multiple-container{border-top-right-radius:0;border-bottom-right-radius:0}.p-autocomplete-dd .p-autocomplete-dropdown{border-top-left-radius:0;border-bottom-left-radius:0}.p-autocomplete .p-autocomplete-panel{min-width:100%;top:0;left:0}.p-autocomplete-panel{position:absolute;overflow:auto}.p-autocomplete-items{margin:0;padding:0;list-style-type:none}.p-autocomplete-item{cursor:pointer;white-space:nowrap;position:relative;overflow:hidden}.p-autocomplete-multiple-container{margin:0;padding:0;list-style-type:none;cursor:text;overflow:hidden;display:flex;align-items:center;flex-wrap:wrap}.p-autocomplete-token{cursor:default;display:inline-flex;align-items:center;flex:0 0 auto}.p-autocomplete-token-icon{cursor:pointer}.p-autocomplete-input-token{flex:1 1 auto;display:inline-flex}.p-autocomplete-input-token input{border:0 none;outline:0 none;background-color:transparent;margin:0;padding:0;box-shadow:none;border-radius:0;width:100%}.p-fluid .p-autocomplete{display:flex}.p-fluid .p-autocomplete-dd .p-autocomplete-input{width:1%}.p-autocomplete-clear-icon{position:absolute;top:50%;margin-top:-.5rem;cursor:pointer}.p-autocomplete-clearable{position:relative}\\n\"],\n    encapsulation: 2,\n    data: {\n      animation: [trigger('overlayAnimation', [transition(':enter', [style({\n        opacity: 0,\n        transform: 'scaleY(0.8)'\n      }), animate('{{showTransitionParams}}')]), transition(':leave', [animate('{{hideTransitionParams}}', style({\n        opacity: 0\n      }))])])]\n    },\n    changeDetection: 0\n  });\n  return AutoComplete;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nvar AutoCompleteModule = /*#__PURE__*/(function () {\n  var AutoCompleteModule = /*#__PURE__*/_createClass(function AutoCompleteModule() {\n    _classCallCheck(this, AutoCompleteModule);\n  });\n\n  AutoCompleteModule.ɵfac = function AutoCompleteModule_Factory(t) {\n    return new (t || AutoCompleteModule)();\n  };\n\n  AutoCompleteModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: AutoCompleteModule\n  });\n  AutoCompleteModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [CommonModule, InputTextModule, ButtonModule, SharedModule, RippleModule, ScrollerModule, AutoFocusModule, SharedModule, ScrollerModule, AutoFocusModule]\n  });\n  return AutoCompleteModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { AUTOCOMPLETE_VALUE_ACCESSOR, AutoComplete, AutoCompleteModule }; //# sourceMappingURL=primeng-autocomplete.mjs.map","map":null,"metadata":{},"sourceType":"module"}