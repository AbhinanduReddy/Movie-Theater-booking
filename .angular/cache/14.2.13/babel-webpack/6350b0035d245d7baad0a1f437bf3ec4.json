{"ast":null,"code":"import _classCallCheck from \"/Users/prakhyamylavaram/Desktop/SJSU/CMPE-202/Project_Theater/Movie-Theater-booking/ui-components/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/prakhyamylavaram/Desktop/SJSU/CMPE-202/Project_Theater/Movie-Theater-booking/ui-components/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthenticationService } from '../../services/authentication.service';\nimport { TheaterService } from '../../services/theater.service';\nimport { MessageService } from 'primeng/api';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/theater.service\";\nimport * as i3 from \"@angular/common/http\";\nimport * as i4 from \"../../services/authentication.service\";\nimport * as i5 from \"primeng/api\";\nimport * as i6 from \"primeng/multiselect\";\nimport * as i7 from \"primeng/dropdown\";\nimport * as i8 from \"primeng/toast\";\nexport var assignTheaterComponent = /*#__PURE__*/(function () {\n  var assignTheaterComponent = /*#__PURE__*/function () {\n    function assignTheaterComponent(formBuilder, theaterSvc, http, auth, messageService) {\n      _classCallCheck(this, assignTheaterComponent);\n\n      this.formBuilder = formBuilder;\n      this.theaterSvc = theaterSvc;\n      this.http = http;\n      this.auth = auth;\n      this.messageService = messageService;\n      this.assigntheaterForm = this.formBuilder.group({\n        theater_name: ['', Validators.required],\n        location: ['', Validators.required],\n        screen_name: ['', Validators.required],\n        show_times: [[]],\n        cost: ''\n      });\n      console.log(this.id);\n    }\n\n    _createClass(assignTheaterComponent, [{\n      key: \"locationSelected\",\n      value: function locationSelected($event) {\n        var _this = this;\n\n        this.location = $event.value;\n        console.log($event);\n        this.http.get('/api/theaters/location/' + $event.value.location_id).subscribe(function (res) {\n          _this.theaters = res;\n        });\n      }\n    }, {\n      key: \"theaterSelected\",\n      value: function theaterSelected($event) {\n        var _this2 = this;\n\n        console.log(this.theater);\n        console.log($event);\n        this.theater = $event.value;\n        var params = new HttpParams();\n        params = params.append('theater_id', $event.value.theater_id);\n        this.http.get('/api/theaters/theater_screen', {\n          params: params\n        }).subscribe(function (res) {\n          _this2.screens = res;\n        });\n      }\n    }, {\n      key: \"screenSelected\",\n      value: function screenSelected($event) {\n        var _this3 = this;\n\n        this.screen = $event.value;\n        var params = new HttpParams();\n        params = params.append('theater_id', this.theater.theater_id);\n        params = params.append('screen_id', this.screen.screen_id);\n        this.http.get('/api/theaters/screen', {\n          params: params\n        }).subscribe(function (res) {\n          console.log(res);\n          var show_times_assigned = [];\n          res.forEach(function (val) {\n            show_times_assigned.push(val.show_time);\n          });\n          console.log(show_times_assigned);\n          console.log(_this3.screen.show_times);\n          _this3.available_show_times = _this3.screen.show_times.filter(function (time) {\n            return !show_times_assigned.includes(time);\n          });\n        });\n      }\n    }, {\n      key: \"formatTimeDisplay\",\n      value: function formatTimeDisplay(time) {\n        var date = new Date(time);\n        var formattedTime = date.toLocaleTimeString(); // Adjust formatting options as needed\n\n        return formattedTime;\n      }\n    }, {\n      key: \"assignTheater\",\n      value: function assignTheater() {\n        var _this4 = this;\n\n        var _a;\n\n        console.log(this.assigntheaterForm.value);\n        var headers = new HttpHeaders({\n          'Content-Type': 'application/json' // Set default header\n\n        });\n\n        if ((_a = this.auth.user) === null || _a === void 0 ? void 0 : _a.token) {\n          headers = headers.set('Authorization', this.auth.user.token);\n        }\n\n        var st = [];\n        this.available_show_times.forEach(function (res) {\n          var c = _this4.formatTimeDisplay(res);\n\n          if (_this4.assigntheaterForm.value.show_times.includes(c)) {\n            st.push(res);\n          }\n        });\n        var body = {\n          \"theater_id\": this.theater.theater_id,\n          \"movie_id\": this.id,\n          \"screen_id\": this.screen.screen_id,\n          \"screen_name\": this.screen.screen_name,\n          \"show_times\": st,\n          \"cost\": this.assigntheaterForm.value.cost\n        };\n        this.http.post('/api/theaters/screen', body, {\n          headers: headers\n        }).subscribe(function (res) {\n          console.log(res);\n\n          _this4.assigntheaterForm.reset();\n\n          _this4.messageService.add({\n            severity: 'success',\n            summary: 'Success',\n            detail: 'Movie Created'\n          });\n        });\n      }\n    }]);\n\n    return assignTheaterComponent;\n  }();\n\n  assignTheaterComponent.ɵfac = function assignTheaterComponent_Factory(t) {\n    return new (t || assignTheaterComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.TheaterService), i0.ɵɵdirectiveInject(i3.HttpClient), i0.ɵɵdirectiveInject(i4.AuthenticationService), i0.ɵɵdirectiveInject(i5.MessageService));\n  };\n\n  assignTheaterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: assignTheaterComponent,\n    selectors: [[\"app-assignTheater\"]],\n    inputs: {\n      id: \"id\"\n    },\n    features: [i0.ɵɵProvidersFeature([MessageService])],\n    decls: 24,\n    vars: 15,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"location\"], [\"formControlName\", \"location\", \"id\", \"city\", \"placeholder\", \"Select a Location\", \"optionLabel\", \"city\", 3, \"ngModel\", \"filter\", \"options\", \"showClear\", \"ngModelChange\", \"onChange\"], [\"for\", \"theater_name\"], [\"formControlName\", \"theater_name\", \"id\", \"theater_name\", \"placeholder\", \"Select a Theater\", \"optionLabel\", \"theater_name\", 3, \"ngModel\", \"filter\", \"options\", \"showClear\", \"ngModelChange\", \"onChange\"], [\"for\", \"screen\"], [\"formControlName\", \"screen_name\", \"id\", \"screen_id\", \"placeholder\", \"Select a screen\", \"optionLabel\", \"screen_name\", 3, \"ngModel\", \"filter\", \"options\", \"showClear\", \"ngModelChange\", \"onChange\"], [\"for\", \"show_times\"], [\"formControlName\", \"show_times\", \"defaultLabel\", \"Select Show times\", \"display\", \"chip\", 3, \"options\", \"ngModel\", \"ngModelChange\"], [\"for\", \"cost\"], [\"formControlName\", \"cost\", \"type\", \"text\", \"id\", \"cost\", \"placeholder\", \"Enter Cost in Dollars\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"]],\n    template: function assignTheaterComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"p-toast\");\n        i0.ɵɵelementStart(1, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function assignTheaterComponent_Template_form_ngSubmit_1_listener() {\n          return ctx.assignTheater();\n        });\n        i0.ɵɵelementStart(2, \"div\", 1)(3, \"label\", 2);\n        i0.ɵɵtext(4, \"Location\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"p-dropdown\", 3);\n        i0.ɵɵlistener(\"ngModelChange\", function assignTheaterComponent_Template_p_dropdown_ngModelChange_5_listener($event) {\n          return ctx.location = $event;\n        })(\"onChange\", function assignTheaterComponent_Template_p_dropdown_onChange_5_listener($event) {\n          return ctx.locationSelected($event);\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"div\", 1)(7, \"label\", 4);\n        i0.ɵɵtext(8, \"Theater\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"p-dropdown\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function assignTheaterComponent_Template_p_dropdown_ngModelChange_9_listener($event) {\n          return ctx.theater = $event;\n        })(\"onChange\", function assignTheaterComponent_Template_p_dropdown_onChange_9_listener($event) {\n          return ctx.theaterSelected($event);\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(10, \"div\", 1)(11, \"label\", 6);\n        i0.ɵɵtext(12, \"Screen \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"p-dropdown\", 7);\n        i0.ɵɵlistener(\"ngModelChange\", function assignTheaterComponent_Template_p_dropdown_ngModelChange_13_listener($event) {\n          return ctx.screen = $event;\n        })(\"onChange\", function assignTheaterComponent_Template_p_dropdown_onChange_13_listener($event) {\n          return ctx.screenSelected($event);\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(14, \"div\", 1)(15, \"label\", 8);\n        i0.ɵɵtext(16, \"Available Show Times\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"p-multiSelect\", 9);\n        i0.ɵɵlistener(\"ngModelChange\", function assignTheaterComponent_Template_p_multiSelect_ngModelChange_17_listener($event) {\n          return ctx.show_times = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(18, \"div\", 1)(19, \"label\", 10);\n        i0.ɵɵtext(20, \"Cost\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(21, \"input\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"button\", 12);\n        i0.ɵɵtext(23, \"Assign\");\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.assigntheaterForm);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.location)(\"filter\", true)(\"options\", ctx.theaterSvc.location_list)(\"showClear\", true);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.theater)(\"filter\", true)(\"options\", ctx.theaters)(\"showClear\", true);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.screen)(\"filter\", true)(\"options\", ctx.screens)(\"showClear\", true);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"options\", ctx.available_show_times == null ? null : ctx.available_show_times.map(ctx.formatTimeDisplay))(\"ngModel\", ctx.show_times);\n      }\n    },\n    dependencies: [i6.MultiSelect, i7.Dropdown, i8.Toast, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\".error[_ngcontent-%COMP%]{color:red;border:1px solid #f00;border-radius:30px}.icon[_ngcontent-%COMP%]{margin-right:10px;cursor:pointer}.caption-wrapper[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:space-between}.custom-button[_ngcontent-%COMP%]{margin-left:10px}.form-row[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap;gap:10px}.form-item[_ngcontent-%COMP%]{flex:1;display:flex;flex-direction:column}label[_ngcontent-%COMP%]{margin-right:15px;margin-bottom:5px}.form-control[_ngcontent-%COMP%]{width:50%!important;display:inline!important}.p-dropdown-label[_ngcontent-%COMP%]{color:#000!important}\"]\n  });\n  return assignTheaterComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}